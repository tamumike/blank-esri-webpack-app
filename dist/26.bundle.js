(function(){(this||window).webpackJsonp.registerAbsMids({"esri/views/layers/LayerView":1299,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/layers/LayerView":1299,"esri/core/requireUtils":1323,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/core/requireUtils":1323,"esri/views/2d/tiling/enums":1324,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/2d/tiling/enums":1324,"esri/views/webgl/ShaderSnippets":1426,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/webgl/ShaderSnippets":1426,"esri/core/libs/gl-matrix/mat4":1447,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/core/libs/gl-matrix/mat4":1447,"esri/views/webgl/ShaderVariations":1464,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/webgl/ShaderVariations":1464,"esri/core/libs/gl-matrix/vec4":1488,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/core/libs/gl-matrix/vec4":1488,"esri/core/libs/gl-matrix/vec3":1503,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/core/libs/gl-matrix/vec3":1503,"esri/views/vectorTiles/renderers/vtShaderSnippets":1528,"esri/views/vectorTiles/renderers/rendererUtils":1540,"esri/views/vectorTiles/MemoryBuffer":1627,"dojo/text!C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/2d/engine/webgl/shaders/tileInfo.xml":1630,"dojo/text!esri/views/2d/engine/webgl/shaders/tileInfo.xml":1630,"esri/core/LRUCache":1668,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/views/webgl/ShaderSourceVariator":1693,"esri/views/vectorTiles/Rect":1706,"esri/views/vectorTiles/TileHandler":1775,"esri/views/vectorTiles/RectangleBinPack":1776,"esri/views/vectorTiles/VectorTileDisplayObject":1777,"esri/views/vectorTiles/renderers/Renderer":1778,"esri/core/libs/gl-matrix/mat3":1779,"esri/views/vectorTiles/GlyphMosaic":2114,"esri/views/vectorTiles/GlyphSource":2115,"esri/views/vectorTiles/SpriteMosaic":2116,"esri/views/vectorTiles/SpriteSource":2117,"esri/views/vectorTiles/TileIndex":2118,"esri/views/vectorTiles/RenderBucket":2119,"esri/views/vectorTiles/renderers/FadeRecorder":2121,"esri/views/vectorTiles/renderers/BackgroundRenderer":2122,"dojo/text!esri/views/vectorTiles/renderers/shaders/iconShaders.xml":2123,"dojo/text!esri/views/vectorTiles/renderers/shaders/backgroundShaders.xml":2124,"dojo/text!esri/views/vectorTiles/renderers/shaders/circleShaders.xml":2125,"dojo/text!esri/views/vectorTiles/renderers/shaders/fillShaders.xml":2126,"dojo/text!esri/views/vectorTiles/renderers/shaders/lineShaders.xml":2127,"dojo/text!esri/views/vectorTiles/renderers/shaders/outlineShaders.xml":2128,"dojo/text!esri/views/vectorTiles/renderers/shaders/textShaders.xml":2129,"esri/views/vectorTiles/renderers/CircleRenderer":2130,"esri/views/vectorTiles/renderers/FillRenderer":2131,"esri/views/vectorTiles/renderers/LineRenderer":2132,"esri/views/vectorTiles/renderers/SymbolRenderer":2133,"esri/views/vectorTiles/renderers/IconRenderer":2134,"esri/views/vectorTiles/renderers/SDFRenderer":2135,"esri/views/vectorTiles/renderers/TileInfoRenderer":2136})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{1299:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(2),i(0),i(4),i(42),i(16),i(147),i(7),i(146),i(6),i(1)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h,f){return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.handles=new o,t.layer=null,t.parent=null,t.view=null,t}return i(t,e),t.prototype.initialize=function(){var e=this;this.addResolvingPromise(this.layer),this.when().catch(function(t){if("layerview:create-error"!==t.name){var i=e.layer&&e.layer.id||"no id",r=e.layer&&e.layer.title||"no title";return l.getLogger(e.declaredClass).error("#resolve()","Failed to resolve layer view (layer title: '"+r+"', id: '"+i+"')",t),h.reject(t)}})},t.prototype.destroy=function(){this.layer=this.view=this.parent=null},Object.defineProperty(t.prototype,"suspended",{get:function(){return!this.canResume()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"updating",{get:function(){return!this.suspended&&this.isUpdating()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"visible",{get:function(){return!0===this.get("layer.visible")},set:function(e){void 0!==e?this._override("visible",e):this._clearOverride("visible")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fullOpacity",{get:function(){var e=function(e){return null!=e?e:1};return e(this.get("layer.opacity"))*e(this.get("parent.fullOpacity"))},enumerable:!0,configurable:!0}),t.prototype.canResume=function(){return!this.get("parent.suspended")&&this.get("view.ready")&&this.get("layer.loaded")&&this.visible||!1},t.prototype.isUpdating=function(){return!1},r([f.property()],t.prototype,"layer",void 0),r([f.property()],t.prototype,"parent",void 0),r([f.property({readOnly:!0,dependsOn:["view","visible","layer.loaded","parent.suspended"]})],t.prototype,"suspended",null),r([f.property({type:Boolean,dependsOn:["suspended"],readOnly:!0})],t.prototype,"updating",null),r([f.property()],t.prototype,"view",void 0),r([f.property({dependsOn:["layer.visible"]})],t.prototype,"visible",null),r([f.property({dependsOn:["layer.opacity","parent.fullOpacity"]})],t.prototype,"fullOpacity",null),r([f.subclass("esri.views.layers.LayerView")],t)}(f.declared(n,a,s,u))}.apply(null,r))||(e.exports=n)},1323:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(23)],void 0===(n=function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.when=function e(t,r){if(Array.isArray(r)){var n=new i;return t(r,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];n.resolve(e)}),n.promise}return e(t,[r]).then(function(e){return e[0]})},t.getAbsMid=function(e,t,i){return t.toAbsMid?t.toAbsMid(e):i.id.replace(/\/[^\/]*$/gi,"/")+e}}.apply(null,r))||(e.exports=n)},1324:function(e,t,i){var r,n;r=[i.dj.c(e.i),t],void 0===(n=function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.NO_DATA=1]="NO_DATA",e[e.READY=2]="READY",e[e.MODIFIED=3]="MODIFIED",e[e.INVALID=4]="INVALID"}(t.TileStatus||(t.TileStatus={}))}.apply(null,r))||(e.exports=n)},1426:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1455)],void 0===(n=function(e,t,i){return function(){function e(e){if(e)for(var t in e)this[t]=e[t]}return e.parse=function(e,t){for(var r=i.parse(e).getElementsByTagName("snippet"),n=/\$[a-zA-Z][a-zA-Z0-9]*(?:\([^\(\)]*\))?[ \t]*/,a=/[\$\s]+/g,o=/\(([^\(\)]*)\)/,s=0;s<r.length;s++){for(var l=r[s].getAttribute("name"),u=r[s].textContent;;){var h=u.match(n);if(null==h)break;var f=h[0].replace(a,""),d=f.match(o),c=void 0;d&&(c=d[1].split(",").map(function(e){return e.trim()}));var p=f.replace(o,""),_=t._instantiate(p,c);u=u.replace(h[0],_)}t[l]=u}},e.prototype._instantiate=function(e,t){var i=this[e];for(t||(t=[]);;){var r=i.match(/\$(\d+)/);if(null==r)break;var n=t[parseInt(r[1],10)];i=i.replace(r[0],n)}return i},e}()}.apply(null,r))||(e.exports=n)},1447:function(e,t,i){var r,n;r=[i(209)],void 0===(n=function(e){var t={scalar:{},SIMD:{},create:function(){var t=new e.ARRAY_TYPE(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},clone:function(t){var i=new e.ARRAY_TYPE(16);return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i[9]=t[9],i[10]=t[10],i[11]=t[11],i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15],i},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},fromValues:function(t,i,r,n,a,o,s,l,u,h,f,d,c,p,_,m){var v=new e.ARRAY_TYPE(16);return v[0]=t,v[1]=i,v[2]=r,v[3]=n,v[4]=a,v[5]=o,v[6]=s,v[7]=l,v[8]=u,v[9]=h,v[10]=f,v[11]=d,v[12]=c,v[13]=p,v[14]=_,v[15]=m,v},set:function(e,t,i,r,n,a,o,s,l,u,h,f,d,c,p,_,m){return e[0]=t,e[1]=i,e[2]=r,e[3]=n,e[4]=a,e[5]=o,e[6]=s,e[7]=l,e[8]=u,e[9]=h,e[10]=f,e[11]=d,e[12]=c,e[13]=p,e[14]=_,e[15]=m,e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}};return t.scalar.transpose=function(e,t){if(e===t){var i=t[1],r=t[2],n=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=i,e[6]=t[9],e[7]=t[13],e[8]=r,e[9]=a,e[11]=t[14],e[12]=n,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},t.SIMD.transpose=function(e,t){var i,r,n,a,o,s,l,u,h,f;return i=SIMD.Float32x4.load(t,0),r=SIMD.Float32x4.load(t,4),n=SIMD.Float32x4.load(t,8),a=SIMD.Float32x4.load(t,12),o=SIMD.Float32x4.shuffle(i,r,0,1,4,5),s=SIMD.Float32x4.shuffle(n,a,0,1,4,5),l=SIMD.Float32x4.shuffle(o,s,0,2,4,6),u=SIMD.Float32x4.shuffle(o,s,1,3,5,7),SIMD.Float32x4.store(e,0,l),SIMD.Float32x4.store(e,4,u),o=SIMD.Float32x4.shuffle(i,r,2,3,6,7),s=SIMD.Float32x4.shuffle(n,a,2,3,6,7),h=SIMD.Float32x4.shuffle(o,s,0,2,4,6),f=SIMD.Float32x4.shuffle(o,s,1,3,5,7),SIMD.Float32x4.store(e,8,h),SIMD.Float32x4.store(e,12,f),e},t.transpose=e.USE_SIMD?t.SIMD.transpose:t.scalar.transpose,t.scalar.invert=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],f=t[9],d=t[10],c=t[11],p=t[12],_=t[13],m=t[14],v=t[15],x=i*s-r*o,g=i*l-n*o,D=i*u-a*o,y=r*l-n*s,b=r*u-a*s,M=n*u-a*l,I=h*_-f*p,S=h*m-d*p,w=h*v-c*p,F=f*m-d*_,V=f*v-c*_,z=d*v-c*m,A=x*z-g*V+D*F+y*w-b*S+M*I;return A?(A=1/A,e[0]=(s*z-l*V+u*F)*A,e[1]=(n*V-r*z-a*F)*A,e[2]=(_*M-m*b+v*y)*A,e[3]=(d*b-f*M-c*y)*A,e[4]=(l*w-o*z-u*S)*A,e[5]=(i*z-n*w+a*S)*A,e[6]=(m*D-p*M-v*g)*A,e[7]=(h*M-d*D+c*g)*A,e[8]=(o*V-s*w+u*I)*A,e[9]=(r*w-i*V-a*I)*A,e[10]=(p*b-_*D+v*x)*A,e[11]=(f*D-h*b-c*x)*A,e[12]=(s*S-o*F-l*I)*A,e[13]=(i*F-r*S+n*I)*A,e[14]=(_*g-p*y-m*x)*A,e[15]=(h*y-f*g+d*x)*A,e):null},t.SIMD.invert=function(e,t){var i,r,n,a,o,s,l,u,h,f,d=SIMD.Float32x4.load(t,0),c=SIMD.Float32x4.load(t,4),p=SIMD.Float32x4.load(t,8),_=SIMD.Float32x4.load(t,12);return o=SIMD.Float32x4.shuffle(d,c,0,1,4,5),r=SIMD.Float32x4.shuffle(p,_,0,1,4,5),i=SIMD.Float32x4.shuffle(o,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,o,1,3,5,7),o=SIMD.Float32x4.shuffle(d,c,2,3,6,7),a=SIMD.Float32x4.shuffle(p,_,2,3,6,7),n=SIMD.Float32x4.shuffle(o,a,0,2,4,6),a=SIMD.Float32x4.shuffle(a,o,1,3,5,7),o=SIMD.Float32x4.mul(n,a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),s=SIMD.Float32x4.mul(r,o),l=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,o),s),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),o=SIMD.Float32x4.mul(r,n),o=SIMD.Float32x4.swizzle(o,1,0,3,2),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),s),h=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(a,o)),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),o=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(r,2,3,0,1),a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),n=SIMD.Float32x4.swizzle(n,2,3,0,1),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),s),u=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(n,o)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),o=SIMD.Float32x4.mul(i,r),o=SIMD.Float32x4.swizzle(o,1,0,3,2),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),u),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,o),h),o=SIMD.Float32x4.swizzle(o,2,3,0,1),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,o),u),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(n,o)),o=SIMD.Float32x4.mul(i,a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(n,o)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),u),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(r,o)),o=SIMD.Float32x4.mul(i,n),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),l),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(r,o)),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(a,o)),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),h),f=SIMD.Float32x4.mul(i,s),f=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(f,2,3,0,1),f),f=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(f,1,0,3,2),f),o=SIMD.Float32x4.reciprocalApproximation(f),f=SIMD.Float32x4.sub(SIMD.Float32x4.add(o,o),SIMD.Float32x4.mul(f,SIMD.Float32x4.mul(o,o))),(f=SIMD.Float32x4.swizzle(f,0,0,0,0))?(SIMD.Float32x4.store(e,0,SIMD.Float32x4.mul(f,s)),SIMD.Float32x4.store(e,4,SIMD.Float32x4.mul(f,l)),SIMD.Float32x4.store(e,8,SIMD.Float32x4.mul(f,u)),SIMD.Float32x4.store(e,12,SIMD.Float32x4.mul(f,h)),e):null},t.invert=e.USE_SIMD?t.SIMD.invert:t.scalar.invert,t.scalar.adjoint=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],f=t[9],d=t[10],c=t[11],p=t[12],_=t[13],m=t[14],v=t[15];return e[0]=s*(d*v-c*m)-f*(l*v-u*m)+_*(l*c-u*d),e[1]=-(r*(d*v-c*m)-f*(n*v-a*m)+_*(n*c-a*d)),e[2]=r*(l*v-u*m)-s*(n*v-a*m)+_*(n*u-a*l),e[3]=-(r*(l*c-u*d)-s*(n*c-a*d)+f*(n*u-a*l)),e[4]=-(o*(d*v-c*m)-h*(l*v-u*m)+p*(l*c-u*d)),e[5]=i*(d*v-c*m)-h*(n*v-a*m)+p*(n*c-a*d),e[6]=-(i*(l*v-u*m)-o*(n*v-a*m)+p*(n*u-a*l)),e[7]=i*(l*c-u*d)-o*(n*c-a*d)+h*(n*u-a*l),e[8]=o*(f*v-c*_)-h*(s*v-u*_)+p*(s*c-u*f),e[9]=-(i*(f*v-c*_)-h*(r*v-a*_)+p*(r*c-a*f)),e[10]=i*(s*v-u*_)-o*(r*v-a*_)+p*(r*u-a*s),e[11]=-(i*(s*c-u*f)-o*(r*c-a*f)+h*(r*u-a*s)),e[12]=-(o*(f*m-d*_)-h*(s*m-l*_)+p*(s*d-l*f)),e[13]=i*(f*m-d*_)-h*(r*m-n*_)+p*(r*d-n*f),e[14]=-(i*(s*m-l*_)-o*(r*m-n*_)+p*(r*l-n*s)),e[15]=i*(s*d-l*f)-o*(r*d-n*f)+h*(r*l-n*s),e},t.SIMD.adjoint=function(e,t){var i,r,n,a,o,s,l,u,h,f=SIMD.Float32x4.load(t,0),d=SIMD.Float32x4.load(t,4),c=SIMD.Float32x4.load(t,8),p=SIMD.Float32x4.load(t,12);return o=SIMD.Float32x4.shuffle(f,d,0,1,4,5),r=SIMD.Float32x4.shuffle(c,p,0,1,4,5),i=SIMD.Float32x4.shuffle(o,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,o,1,3,5,7),o=SIMD.Float32x4.shuffle(f,d,2,3,6,7),a=SIMD.Float32x4.shuffle(c,p,2,3,6,7),n=SIMD.Float32x4.shuffle(o,a,0,2,4,6),a=SIMD.Float32x4.shuffle(a,o,1,3,5,7),o=SIMD.Float32x4.mul(n,a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),s=SIMD.Float32x4.mul(r,o),l=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,o),s),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),o=SIMD.Float32x4.mul(r,n),o=SIMD.Float32x4.swizzle(o,1,0,3,2),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),s),h=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(a,o)),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),o=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(r,2,3,0,1),a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),n=SIMD.Float32x4.swizzle(n,2,3,0,1),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),s),u=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(n,o)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),o=SIMD.Float32x4.mul(i,r),o=SIMD.Float32x4.swizzle(o,1,0,3,2),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),u),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,o),h),o=SIMD.Float32x4.swizzle(o,2,3,0,1),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,o),u),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(n,o)),o=SIMD.Float32x4.mul(i,a),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(n,o)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),u),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(r,o)),o=SIMD.Float32x4.mul(i,n),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,o),l),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(r,o)),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(a,o)),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),h),SIMD.Float32x4.store(e,0,s),SIMD.Float32x4.store(e,4,l),SIMD.Float32x4.store(e,8,u),SIMD.Float32x4.store(e,12,h),e},t.adjoint=e.USE_SIMD?t.SIMD.adjoint:t.scalar.adjoint,t.determinant=function(e){var t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],h=e[9],f=e[10],d=e[11],c=e[12],p=e[13],_=e[14],m=e[15];return(t*o-i*a)*(f*m-d*_)-(t*s-r*a)*(h*m-d*p)+(t*l-n*a)*(h*_-f*p)+(i*s-r*o)*(u*m-d*c)-(i*l-n*o)*(u*_-f*c)+(r*l-n*s)*(u*p-h*c)},t.SIMD.multiply=function(e,t,i){var r=SIMD.Float32x4.load(t,0),n=SIMD.Float32x4.load(t,4),a=SIMD.Float32x4.load(t,8),o=SIMD.Float32x4.load(t,12),s=SIMD.Float32x4.load(i,0),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,2,2,2,2),a),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,3,3,3,3),o))));SIMD.Float32x4.store(e,0,l);var u=SIMD.Float32x4.load(i,4),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,2,2,2,2),a),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,3,3,3,3),o))));SIMD.Float32x4.store(e,4,h);var f=SIMD.Float32x4.load(i,8),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,2,2,2,2),a),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,3,3,3,3),o))));SIMD.Float32x4.store(e,8,d);var c=SIMD.Float32x4.load(i,12),p=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),a),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),o))));return SIMD.Float32x4.store(e,12,p),e},t.scalar.multiply=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=t[9],c=t[10],p=t[11],_=t[12],m=t[13],v=t[14],x=t[15],g=i[0],D=i[1],y=i[2],b=i[3];return e[0]=g*r+D*s+y*f+b*_,e[1]=g*n+D*l+y*d+b*m,e[2]=g*a+D*u+y*c+b*v,e[3]=g*o+D*h+y*p+b*x,g=i[4],D=i[5],y=i[6],b=i[7],e[4]=g*r+D*s+y*f+b*_,e[5]=g*n+D*l+y*d+b*m,e[6]=g*a+D*u+y*c+b*v,e[7]=g*o+D*h+y*p+b*x,g=i[8],D=i[9],y=i[10],b=i[11],e[8]=g*r+D*s+y*f+b*_,e[9]=g*n+D*l+y*d+b*m,e[10]=g*a+D*u+y*c+b*v,e[11]=g*o+D*h+y*p+b*x,g=i[12],D=i[13],y=i[14],b=i[15],e[12]=g*r+D*s+y*f+b*_,e[13]=g*n+D*l+y*d+b*m,e[14]=g*a+D*u+y*c+b*v,e[15]=g*o+D*h+y*p+b*x,e},t.multiply=e.USE_SIMD?t.SIMD.multiply:t.scalar.multiply,t.mul=t.multiply,t.scalar.translate=function(e,t,i){var r,n,a,o,s,l,u,h,f,d,c,p,_=i[0],m=i[1],v=i[2];return t===e?(e[12]=t[0]*_+t[4]*m+t[8]*v+t[12],e[13]=t[1]*_+t[5]*m+t[9]*v+t[13],e[14]=t[2]*_+t[6]*m+t[10]*v+t[14],e[15]=t[3]*_+t[7]*m+t[11]*v+t[15]):(r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=t[9],c=t[10],p=t[11],e[0]=r,e[1]=n,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=u,e[7]=h,e[8]=f,e[9]=d,e[10]=c,e[11]=p,e[12]=r*_+s*m+f*v+t[12],e[13]=n*_+l*m+d*v+t[13],e[14]=a*_+u*m+c*v+t[14],e[15]=o*_+h*m+p*v+t[15]),e},t.SIMD.translate=function(e,t,i){var r=SIMD.Float32x4.load(t,0),n=SIMD.Float32x4.load(t,4),a=SIMD.Float32x4.load(t,8),o=SIMD.Float32x4.load(t,12),s=SIMD.Float32x4(i[0],i[1],i[2],0);t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]),r=SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(s,0,0,0,0)),n=SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(s,1,1,1,1)),a=SIMD.Float32x4.mul(a,SIMD.Float32x4.swizzle(s,2,2,2,2));var l=SIMD.Float32x4.add(r,SIMD.Float32x4.add(n,SIMD.Float32x4.add(a,o)));return SIMD.Float32x4.store(e,12,l),e},t.translate=e.USE_SIMD?t.SIMD.translate:t.scalar.translate,t.scalar.scale=function(e,t,i){var r=i[0],n=i[1],a=i[2];return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*n,e[5]=t[5]*n,e[6]=t[6]*n,e[7]=t[7]*n,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},t.SIMD.scale=function(e,t,i){var r,n,a,o=SIMD.Float32x4(i[0],i[1],i[2],0);return r=SIMD.Float32x4.load(t,0),SIMD.Float32x4.store(e,0,SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(o,0,0,0,0))),n=SIMD.Float32x4.load(t,4),SIMD.Float32x4.store(e,4,SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(o,1,1,1,1))),a=SIMD.Float32x4.load(t,8),SIMD.Float32x4.store(e,8,SIMD.Float32x4.mul(a,SIMD.Float32x4.swizzle(o,2,2,2,2))),e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},t.scale=e.USE_SIMD?t.SIMD.scale:t.scalar.scale,t.rotate=function(t,i,r,n){var a,o,s,l,u,h,f,d,c,p,_,m,v,x,g,D,y,b,M,I,S,w,F,V,z=n[0],A=n[1],T=n[2],P=Math.sqrt(z*z+A*A+T*T);return Math.abs(P)<e.EPSILON?null:(z*=P=1/P,A*=P,T*=P,a=Math.sin(r),s=1-(o=Math.cos(r)),l=i[0],u=i[1],h=i[2],f=i[3],d=i[4],c=i[5],p=i[6],_=i[7],m=i[8],v=i[9],x=i[10],g=i[11],D=z*z*s+o,y=A*z*s+T*a,b=T*z*s-A*a,M=z*A*s-T*a,I=A*A*s+o,S=T*A*s+z*a,w=z*T*s+A*a,F=A*T*s-z*a,V=T*T*s+o,t[0]=l*D+d*y+m*b,t[1]=u*D+c*y+v*b,t[2]=h*D+p*y+x*b,t[3]=f*D+_*y+g*b,t[4]=l*M+d*I+m*S,t[5]=u*M+c*I+v*S,t[6]=h*M+p*I+x*S,t[7]=f*M+_*I+g*S,t[8]=l*w+d*F+m*V,t[9]=u*w+c*F+v*V,t[10]=h*w+p*F+x*V,t[11]=f*w+_*F+g*V,i!==t&&(t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15]),t)},t.scalar.rotateX=function(e,t,i){var r=Math.sin(i),n=Math.cos(i),a=t[4],o=t[5],s=t[6],l=t[7],u=t[8],h=t[9],f=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*n+u*r,e[5]=o*n+h*r,e[6]=s*n+f*r,e[7]=l*n+d*r,e[8]=u*n-a*r,e[9]=h*n-o*r,e[10]=f*n-s*r,e[11]=d*n-l*r,e},t.SIMD.rotateX=function(e,t,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);var a=SIMD.Float32x4.load(t,4),o=SIMD.Float32x4.load(t,8);return SIMD.Float32x4.store(e,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(a,n),SIMD.Float32x4.mul(o,r))),SIMD.Float32x4.store(e,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,n),SIMD.Float32x4.mul(a,r))),e},t.rotateX=e.USE_SIMD?t.SIMD.rotateX:t.scalar.rotateX,t.scalar.rotateY=function(e,t,i){var r=Math.sin(i),n=Math.cos(i),a=t[0],o=t[1],s=t[2],l=t[3],u=t[8],h=t[9],f=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*n-u*r,e[1]=o*n-h*r,e[2]=s*n-f*r,e[3]=l*n-d*r,e[8]=a*r+u*n,e[9]=o*r+h*n,e[10]=s*r+f*n,e[11]=l*r+d*n,e},t.SIMD.rotateY=function(e,t,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);var a=SIMD.Float32x4.load(t,0),o=SIMD.Float32x4.load(t,8);return SIMD.Float32x4.store(e,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,n),SIMD.Float32x4.mul(o,r))),SIMD.Float32x4.store(e,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(a,r),SIMD.Float32x4.mul(o,n))),e},t.rotateY=e.USE_SIMD?t.SIMD.rotateY:t.scalar.rotateY,t.scalar.rotateZ=function(e,t,i){var r=Math.sin(i),n=Math.cos(i),a=t[0],o=t[1],s=t[2],l=t[3],u=t[4],h=t[5],f=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*n+u*r,e[1]=o*n+h*r,e[2]=s*n+f*r,e[3]=l*n+d*r,e[4]=u*n-a*r,e[5]=h*n-o*r,e[6]=f*n-s*r,e[7]=d*n-l*r,e},t.SIMD.rotateZ=function(e,t,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);var a=SIMD.Float32x4.load(t,0),o=SIMD.Float32x4.load(t,4);return SIMD.Float32x4.store(e,0,SIMD.Float32x4.add(SIMD.Float32x4.mul(a,n),SIMD.Float32x4.mul(o,r))),SIMD.Float32x4.store(e,4,SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,n),SIMD.Float32x4.mul(a,r))),e},t.rotateZ=e.USE_SIMD?t.SIMD.rotateZ:t.scalar.rotateZ,t.fromTranslation=function(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e},t.fromScaling=function(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromRotation=function(t,i,r){var n,a,o,s=r[0],l=r[1],u=r[2],h=Math.sqrt(s*s+l*l+u*u);return Math.abs(h)<e.EPSILON?null:(s*=h=1/h,l*=h,u*=h,n=Math.sin(i),o=1-(a=Math.cos(i)),t[0]=s*s*o+a,t[1]=l*s*o+u*n,t[2]=u*s*o-l*n,t[3]=0,t[4]=s*l*o-u*n,t[5]=l*l*o+a,t[6]=u*l*o+s*n,t[7]=0,t[8]=s*u*o+l*n,t[9]=l*u*o-s*n,t[10]=u*u*o+a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},t.fromXRotation=function(e,t){var i=Math.sin(t),r=Math.cos(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=r,e[6]=i,e[7]=0,e[8]=0,e[9]=-i,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromYRotation=function(e,t){var i=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=0,e[2]=-i,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=i,e[9]=0,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromZRotation=function(e,t){var i=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=i,e[2]=0,e[3]=0,e[4]=-i,e[5]=r,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromRotationTranslation=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=r+r,l=n+n,u=a+a,h=r*s,f=r*l,d=r*u,c=n*l,p=n*u,_=a*u,m=o*s,v=o*l,x=o*u;return e[0]=1-(c+_),e[1]=f+x,e[2]=d-v,e[3]=0,e[4]=f-x,e[5]=1-(h+_),e[6]=p+m,e[7]=0,e[8]=d+v,e[9]=p-m,e[10]=1-(h+c),e[11]=0,e[12]=i[0],e[13]=i[1],e[14]=i[2],e[15]=1,e},t.getTranslation=function(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e},t.getRotation=function(e,t){var i=t[0]+t[5]+t[10],r=0;return i>0?(r=2*Math.sqrt(i+1),e[3]=.25*r,e[0]=(t[6]-t[9])/r,e[1]=(t[8]-t[2])/r,e[2]=(t[1]-t[4])/r):t[0]>t[5]&t[0]>t[10]?(r=2*Math.sqrt(1+t[0]-t[5]-t[10]),e[3]=(t[6]-t[9])/r,e[0]=.25*r,e[1]=(t[1]+t[4])/r,e[2]=(t[8]+t[2])/r):t[5]>t[10]?(r=2*Math.sqrt(1+t[5]-t[0]-t[10]),e[3]=(t[8]-t[2])/r,e[0]=(t[1]+t[4])/r,e[1]=.25*r,e[2]=(t[6]+t[9])/r):(r=2*Math.sqrt(1+t[10]-t[0]-t[5]),e[3]=(t[1]-t[4])/r,e[0]=(t[8]+t[2])/r,e[1]=(t[6]+t[9])/r,e[2]=.25*r),e},t.fromRotationTranslationScale=function(e,t,i,r){var n=t[0],a=t[1],o=t[2],s=t[3],l=n+n,u=a+a,h=o+o,f=n*l,d=n*u,c=n*h,p=a*u,_=a*h,m=o*h,v=s*l,x=s*u,g=s*h,D=r[0],y=r[1],b=r[2];return e[0]=(1-(p+m))*D,e[1]=(d+g)*D,e[2]=(c-x)*D,e[3]=0,e[4]=(d-g)*y,e[5]=(1-(f+m))*y,e[6]=(_+v)*y,e[7]=0,e[8]=(c+x)*b,e[9]=(_-v)*b,e[10]=(1-(f+p))*b,e[11]=0,e[12]=i[0],e[13]=i[1],e[14]=i[2],e[15]=1,e},t.fromRotationTranslationScaleOrigin=function(e,t,i,r,n){var a=t[0],o=t[1],s=t[2],l=t[3],u=a+a,h=o+o,f=s+s,d=a*u,c=a*h,p=a*f,_=o*h,m=o*f,v=s*f,x=l*u,g=l*h,D=l*f,y=r[0],b=r[1],M=r[2],I=n[0],S=n[1],w=n[2];return e[0]=(1-(_+v))*y,e[1]=(c+D)*y,e[2]=(p-g)*y,e[3]=0,e[4]=(c-D)*b,e[5]=(1-(d+v))*b,e[6]=(m+x)*b,e[7]=0,e[8]=(p+g)*M,e[9]=(m-x)*M,e[10]=(1-(d+_))*M,e[11]=0,e[12]=i[0]+I-(e[0]*I+e[4]*S+e[8]*w),e[13]=i[1]+S-(e[1]*I+e[5]*S+e[9]*w),e[14]=i[2]+w-(e[2]*I+e[6]*S+e[10]*w),e[15]=1,e},t.fromQuat=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=i+i,s=r+r,l=n+n,u=i*o,h=r*o,f=r*s,d=n*o,c=n*s,p=n*l,_=a*o,m=a*s,v=a*l;return e[0]=1-f-p,e[1]=h+v,e[2]=d-m,e[3]=0,e[4]=h-v,e[5]=1-u-p,e[6]=c+_,e[7]=0,e[8]=d+m,e[9]=c-_,e[10]=1-u-f,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.frustum=function(e,t,i,r,n,a,o){var s=1/(i-t),l=1/(n-r),u=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*l,e[6]=0,e[7]=0,e[8]=(i+t)*s,e[9]=(n+r)*l,e[10]=(o+a)*u,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*u,e[15]=0,e},t.perspective=function(e,t,i,r,n){var a=1/Math.tan(t/2),o=1/(r-n);return e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(n+r)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*n*r*o,e[15]=0,e},t.perspectiveFromFieldOfView=function(e,t,i,r){var n=Math.tan(t.upDegrees*Math.PI/180),a=Math.tan(t.downDegrees*Math.PI/180),o=Math.tan(t.leftDegrees*Math.PI/180),s=Math.tan(t.rightDegrees*Math.PI/180),l=2/(o+s),u=2/(n+a);return e[0]=l,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=u,e[6]=0,e[7]=0,e[8]=-(o-s)*l*.5,e[9]=(n-a)*u*.5,e[10]=r/(i-r),e[11]=-1,e[12]=0,e[13]=0,e[14]=r*i/(i-r),e[15]=0,e},t.ortho=function(e,t,i,r,n,a,o){var s=1/(t-i),l=1/(r-n),u=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+i)*s,e[13]=(n+r)*l,e[14]=(o+a)*u,e[15]=1,e},t.lookAt=function(i,r,n,a){var o,s,l,u,h,f,d,c,p,_,m=r[0],v=r[1],x=r[2],g=a[0],D=a[1],y=a[2],b=n[0],M=n[1],I=n[2];return Math.abs(m-b)<e.EPSILON&&Math.abs(v-M)<e.EPSILON&&Math.abs(x-I)<e.EPSILON?t.identity(i):(d=m-b,c=v-M,p=x-I,o=D*(p*=_=1/Math.sqrt(d*d+c*c+p*p))-y*(c*=_),s=y*(d*=_)-g*p,l=g*c-D*d,(_=Math.sqrt(o*o+s*s+l*l))?(o*=_=1/_,s*=_,l*=_):(o=0,s=0,l=0),u=c*l-p*s,h=p*o-d*l,f=d*s-c*o,(_=Math.sqrt(u*u+h*h+f*f))?(u*=_=1/_,h*=_,f*=_):(u=0,h=0,f=0),i[0]=o,i[1]=u,i[2]=d,i[3]=0,i[4]=s,i[5]=h,i[6]=c,i[7]=0,i[8]=l,i[9]=f,i[10]=p,i[11]=0,i[12]=-(o*m+s*v+l*x),i[13]=-(u*m+h*v+f*x),i[14]=-(d*m+c*v+p*x),i[15]=1,i)},t.str=function(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"},t.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))},t.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e[4]=t[4]+i[4],e[5]=t[5]+i[5],e[6]=t[6]+i[6],e[7]=t[7]+i[7],e[8]=t[8]+i[8],e[9]=t[9]+i[9],e[10]=t[10]+i[10],e[11]=t[11]+i[11],e[12]=t[12]+i[12],e[13]=t[13]+i[13],e[14]=t[14]+i[14],e[15]=t[15]+i[15],e},t.subtract=function(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e[4]=t[4]-i[4],e[5]=t[5]-i[5],e[6]=t[6]-i[6],e[7]=t[7]-i[7],e[8]=t[8]-i[8],e[9]=t[9]-i[9],e[10]=t[10]-i[10],e[11]=t[11]-i[11],e[12]=t[12]-i[12],e[13]=t[13]-i[13],e[14]=t[14]-i[14],e[15]=t[15]-i[15],e},t.sub=t.subtract,t.multiplyScalar=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12]*i,e[13]=t[13]*i,e[14]=t[14]*i,e[15]=t[15]*i,e},t.multiplyScalarAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e[3]=t[3]+i[3]*r,e[4]=t[4]+i[4]*r,e[5]=t[5]+i[5]*r,e[6]=t[6]+i[6]*r,e[7]=t[7]+i[7]*r,e[8]=t[8]+i[8]*r,e[9]=t[9]+i[9]*r,e[10]=t[10]+i[10]*r,e[11]=t[11]+i[11]*r,e[12]=t[12]+i[12]*r,e[13]=t[13]+i[13]*r,e[14]=t[14]+i[14]*r,e[15]=t[15]+i[15]*r,e},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},t.equals=function(t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=t[9],c=t[10],p=t[11],_=t[12],m=t[13],v=t[14],x=t[15],g=i[0],D=i[1],y=i[2],b=i[3],M=i[4],I=i[5],S=i[6],w=i[7],F=i[8],V=i[9],z=i[10],A=i[11],T=i[12],P=i[13],O=i[14],R=i[15];return Math.abs(r-g)<=e.EPSILON*Math.max(1,Math.abs(r),Math.abs(g))&&Math.abs(n-D)<=e.EPSILON*Math.max(1,Math.abs(n),Math.abs(D))&&Math.abs(a-y)<=e.EPSILON*Math.max(1,Math.abs(a),Math.abs(y))&&Math.abs(o-b)<=e.EPSILON*Math.max(1,Math.abs(o),Math.abs(b))&&Math.abs(s-M)<=e.EPSILON*Math.max(1,Math.abs(s),Math.abs(M))&&Math.abs(l-I)<=e.EPSILON*Math.max(1,Math.abs(l),Math.abs(I))&&Math.abs(u-S)<=e.EPSILON*Math.max(1,Math.abs(u),Math.abs(S))&&Math.abs(h-w)<=e.EPSILON*Math.max(1,Math.abs(h),Math.abs(w))&&Math.abs(f-F)<=e.EPSILON*Math.max(1,Math.abs(f),Math.abs(F))&&Math.abs(d-V)<=e.EPSILON*Math.max(1,Math.abs(d),Math.abs(V))&&Math.abs(c-z)<=e.EPSILON*Math.max(1,Math.abs(c),Math.abs(z))&&Math.abs(p-A)<=e.EPSILON*Math.max(1,Math.abs(p),Math.abs(A))&&Math.abs(_-T)<=e.EPSILON*Math.max(1,Math.abs(_),Math.abs(T))&&Math.abs(m-P)<=e.EPSILON*Math.max(1,Math.abs(m),Math.abs(P))&&Math.abs(v-O)<=e.EPSILON*Math.max(1,Math.abs(v),Math.abs(O))&&Math.abs(x-R)<=e.EPSILON*Math.max(1,Math.abs(x),Math.abs(R))},t}.apply(null,r))||(e.exports=n)},1464:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1283),i(1693),i(1279)],void 0===(n=function(e,t,i,r,n){function a(e){return e.reduce(function(e,t,i){return t&&(e|=1<<i),e},0)}return function(){function e(e,t,i,r,n,a){if("string"==typeof e)this._initParams(e,t,i,r,n,a);else{var o=e;this._initObject({programNamePrefix:o.programNamePrefix,shaderSnippetPrefixes:o.shaderSnippetPrefixes,baseDefines:o.baseDefines,snippets:o.snippets,rctx:o.rctx,vertexAttribLocs:o.vertexAttribLocs})}}return e.prototype.dispose=function(){this._programCache&&(this._programCache.forEach(function(e){return e.dispose()}),this._programCache.clear())},e.prototype._initObject=function(e){this._initParams(e.programNamePrefix,e.shaderSnippetPrefixes,e.baseDefines,e.snippets,e.rctx,e.vertexAttribLocs)},e.prototype._initParams=function(e,t,i,n,a,o){this._defaultSnippets=n,this._defaultRctx=a,this._defaultVertexAttribLocs=o,this._programCache=new Map,this._variationInfo=new Map,this._shaderSourceVariator=new r(e,t,i)},e.prototype.addDefine=function(e,t,i,r){this._shaderSourceVariator.addDefine(e,t,i,r)},e.prototype.addBinaryShaderSnippetSuffix=function(e,t,i){this._shaderSourceVariator.addBinaryShaderSnippetSuffix(e,t,i)},e.prototype.addNaryShaderSnippetSuffix=function(e,t){this._shaderSourceVariator.addNaryShaderSnippetSuffix(e,t)},e.prototype.getProgram=function(e,t,r,o){if(t=t||this._defaultSnippets,r=r||this._defaultRctx,o=o||this._defaultVertexAttribLocs,!t)throw new Error("No ShaderSnippets provided to getProgram nor to ShaderVariations constructor.");if(!r)throw new Error("No RenderingContext provided to getProgram nor to ShaderVariations constructor.");if(!o)throw new Error("No VertexAttributeLocations provided to getProgram nor to ShaderVariations constructor.");var s=a(e);if(this._programCache.has(s))return this._programCache.get(s);var l,u,h,f=this._shaderSourceVariator.getShaderVariation(e);u=t[l=f.shaderSnippetNames[0]],n.assert(null!=u,"shader snippet '"+l+"' does not exist"),h=t[l=f.shaderSnippetNames[1]],n.assert(null!=h,"shader snippet '"+l+"' does not exist");var d=new i(r,u,h,o,f.defines);return this._programCache.set(s,d),d},e.prototype.getProgramByKey=function(e){if(this._programCache.has(e))return this._programCache.get(e);if(!this._variationInfo[e])return null;var t,r,a,o=this._variationInfo[e],s=this._defaultSnippets,l=this._defaultRctx,u=this._defaultVertexAttribLocs;r=s[t=o.shaderSnippetNames[0]],n.assert(null!=r,"shader snippet '"+t+"' does not exist"),a=s[t=o.shaderSnippetNames[1]],n.assert(null!=a,"shader snippet '"+t+"' does not exist");var h=new i(l,r,a,u,o.defines);return this._programCache.set(e,h),h},e.prototype.getProgramInfo=function(e){var t=this._shaderSourceVariator.getShaderVariation(e),i=a(e);return this._variationInfo[i]||(this._variationInfo[i]=t),{name:t.programName,key:i}},e}()}.apply(null,r))||(e.exports=n)},1488:function(e,t,i){var r,n;r=[i(209)],void 0===(n=function(e){var t={create:function(){var t=new e.ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},clone:function(t){var i=new e.ARRAY_TYPE(4);return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i},fromValues:function(t,i,r,n){var a=new e.ARRAY_TYPE(4);return a[0]=t,a[1]=i,a[2]=r,a[3]=n,a},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},set:function(e,t,i,r,n){return e[0]=t,e[1]=i,e[2]=r,e[3]=n,e},add:function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e},subtract:function(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e}};return t.sub=t.subtract,t.multiply=function(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e[3]=t[3]*i[3],e},t.mul=t.multiply,t.divide=function(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e[2]=t[2]/i[2],e[3]=t[3]/i[3],e},t.div=t.divide,t.ceil=function(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e[3]=Math.ceil(t[3]),e},t.floor=function(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e[3]=Math.floor(t[3]),e},t.min=function(e,t,i){return e[0]=Math.min(t[0],i[0]),e[1]=Math.min(t[1],i[1]),e[2]=Math.min(t[2],i[2]),e[3]=Math.min(t[3],i[3]),e},t.max=function(e,t,i){return e[0]=Math.max(t[0],i[0]),e[1]=Math.max(t[1],i[1]),e[2]=Math.max(t[2],i[2]),e[3]=Math.max(t[3],i[3]),e},t.round=function(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e[3]=Math.round(t[3]),e},t.scale=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e},t.scaleAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e[3]=t[3]+i[3]*r,e},t.distance=function(e,t){var i=t[0]-e[0],r=t[1]-e[1],n=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(i*i+r*r+n*n+a*a)},t.dist=t.distance,t.squaredDistance=function(e,t){var i=t[0]-e[0],r=t[1]-e[1],n=t[2]-e[2],a=t[3]-e[3];return i*i+r*r+n*n+a*a},t.sqrDist=t.squaredDistance,t.length=function(e){var t=e[0],i=e[1],r=e[2],n=e[3];return Math.sqrt(t*t+i*i+r*r+n*n)},t.len=t.length,t.squaredLength=function(e){var t=e[0],i=e[1],r=e[2],n=e[3];return t*t+i*i+r*r+n*n},t.sqrLen=t.squaredLength,t.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},t.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},t.normalize=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=i*i+r*r+n*n+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=i*o,e[1]=r*o,e[2]=n*o,e[3]=a*o),e},t.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},t.lerp=function(e,t,i,r){var n=t[0],a=t[1],o=t[2],s=t[3];return e[0]=n+r*(i[0]-n),e[1]=a+r*(i[1]-a),e[2]=o+r*(i[2]-o),e[3]=s+r*(i[3]-s),e},t.random=function(i,r){return r=r||1,i[0]=e.RANDOM(),i[1]=e.RANDOM(),i[2]=e.RANDOM(),i[3]=e.RANDOM(),t.normalize(i,i),t.scale(i,i,r),i},t.transformMat4=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3];return e[0]=i[0]*r+i[4]*n+i[8]*a+i[12]*o,e[1]=i[1]*r+i[5]*n+i[9]*a+i[13]*o,e[2]=i[2]*r+i[6]*n+i[10]*a+i[14]*o,e[3]=i[3]*r+i[7]*n+i[11]*a+i[15]*o,e},t.transformQuat=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=i[0],s=i[1],l=i[2],u=i[3],h=u*r+s*a-l*n,f=u*n+l*r-o*a,d=u*a+o*n-s*r,c=-o*r-s*n-l*a;return e[0]=h*u+c*-o+f*-l-d*-s,e[1]=f*u+c*-s+d*-o-h*-l,e[2]=d*u+c*-l+h*-s-f*-o,e[3]=t[3],e},t.forEach=function(){var e=t.create();return function(t,i,r,n,a,o){var s,l;for(i||(i=4),r||(r=0),l=n?Math.min(n*i+r,t.length):t.length,s=r;s<l;s+=i)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),t.str=function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},t.equals=function(t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=i[0],l=i[1],u=i[2],h=i[3];return Math.abs(r-s)<=e.EPSILON*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(n-l)<=e.EPSILON*Math.max(1,Math.abs(n),Math.abs(l))&&Math.abs(a-u)<=e.EPSILON*Math.max(1,Math.abs(a),Math.abs(u))&&Math.abs(o-h)<=e.EPSILON*Math.max(1,Math.abs(o),Math.abs(h))},t}.apply(null,r))||(e.exports=n)},1503:function(e,t,i){var r,n;r=[i(209)],void 0===(n=function(e){var t={create:function(){var t=new e.ARRAY_TYPE(3);return t[0]=0,t[1]=0,t[2]=0,t},clone:function(t){var i=new e.ARRAY_TYPE(3);return i[0]=t[0],i[1]=t[1],i[2]=t[2],i},fromValues:function(t,i,r){var n=new e.ARRAY_TYPE(3);return n[0]=t,n[1]=i,n[2]=r,n},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},set:function(e,t,i,r){return e[0]=t,e[1]=i,e[2]=r,e},add:function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e},subtract:function(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}};return t.sub=t.subtract,t.multiply=function(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e},t.mul=t.multiply,t.divide=function(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e[2]=t[2]/i[2],e},t.div=t.divide,t.ceil=function(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e},t.floor=function(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e},t.min=function(e,t,i){return e[0]=Math.min(t[0],i[0]),e[1]=Math.min(t[1],i[1]),e[2]=Math.min(t[2],i[2]),e},t.max=function(e,t,i){return e[0]=Math.max(t[0],i[0]),e[1]=Math.max(t[1],i[1]),e[2]=Math.max(t[2],i[2]),e},t.round=function(e,t){return e[0]=Math.round(t[0]),e[1]=Math.round(t[1]),e[2]=Math.round(t[2]),e},t.scale=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e},t.scaleAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e},t.distance=function(e,t){var i=t[0]-e[0],r=t[1]-e[1],n=t[2]-e[2];return Math.sqrt(i*i+r*r+n*n)},t.dist=t.distance,t.squaredDistance=function(e,t){var i=t[0]-e[0],r=t[1]-e[1],n=t[2]-e[2];return i*i+r*r+n*n},t.sqrDist=t.squaredDistance,t.length=function(e){var t=e[0],i=e[1],r=e[2];return Math.sqrt(t*t+i*i+r*r)},t.len=t.length,t.squaredLength=function(e){var t=e[0],i=e[1],r=e[2];return t*t+i*i+r*r},t.sqrLen=t.squaredLength,t.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},t.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},t.normalize=function(e,t){var i=t[0],r=t[1],n=t[2],a=i*i+r*r+n*n;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},t.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},t.cross=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=i[0],s=i[1],l=i[2];return e[0]=n*l-a*s,e[1]=a*o-r*l,e[2]=r*s-n*o,e},t.lerp=function(e,t,i,r){var n=t[0],a=t[1],o=t[2];return e[0]=n+r*(i[0]-n),e[1]=a+r*(i[1]-a),e[2]=o+r*(i[2]-o),e},t.hermite=function(e,t,i,r,n,a){var o=a*a,s=o*(2*a-3)+1,l=o*(a-2)+a,u=o*(a-1),h=o*(3-2*a);return e[0]=t[0]*s+i[0]*l+r[0]*u+n[0]*h,e[1]=t[1]*s+i[1]*l+r[1]*u+n[1]*h,e[2]=t[2]*s+i[2]*l+r[2]*u+n[2]*h,e},t.bezier=function(e,t,i,r,n,a){var o=1-a,s=o*o,l=a*a,u=s*o,h=3*a*s,f=3*l*o,d=l*a;return e[0]=t[0]*u+i[0]*h+r[0]*f+n[0]*d,e[1]=t[1]*u+i[1]*h+r[1]*f+n[1]*d,e[2]=t[2]*u+i[2]*h+r[2]*f+n[2]*d,e},t.random=function(t,i){i=i||1;var r=2*e.RANDOM()*Math.PI,n=2*e.RANDOM()-1,a=Math.sqrt(1-n*n)*i;return t[0]=Math.cos(r)*a,t[1]=Math.sin(r)*a,t[2]=n*i,t},t.transformMat4=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=i[3]*r+i[7]*n+i[11]*a+i[15];return o=o||1,e[0]=(i[0]*r+i[4]*n+i[8]*a+i[12])/o,e[1]=(i[1]*r+i[5]*n+i[9]*a+i[13])/o,e[2]=(i[2]*r+i[6]*n+i[10]*a+i[14])/o,e},t.transformMat3=function(e,t,i){var r=t[0],n=t[1],a=t[2];return e[0]=r*i[0]+n*i[3]+a*i[6],e[1]=r*i[1]+n*i[4]+a*i[7],e[2]=r*i[2]+n*i[5]+a*i[8],e},t.transformQuat=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=i[0],s=i[1],l=i[2],u=i[3],h=u*r+s*a-l*n,f=u*n+l*r-o*a,d=u*a+o*n-s*r,c=-o*r-s*n-l*a;return e[0]=h*u+c*-o+f*-l-d*-s,e[1]=f*u+c*-s+d*-o-h*-l,e[2]=d*u+c*-l+h*-s-f*-o,e},t.rotateX=function(e,t,i,r){var n=[],a=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],a[0]=n[0],a[1]=n[1]*Math.cos(r)-n[2]*Math.sin(r),a[2]=n[1]*Math.sin(r)+n[2]*Math.cos(r),e[0]=a[0]+i[0],e[1]=a[1]+i[1],e[2]=a[2]+i[2],e},t.rotateY=function(e,t,i,r){var n=[],a=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],a[0]=n[2]*Math.sin(r)+n[0]*Math.cos(r),a[1]=n[1],a[2]=n[2]*Math.cos(r)-n[0]*Math.sin(r),e[0]=a[0]+i[0],e[1]=a[1]+i[1],e[2]=a[2]+i[2],e},t.rotateZ=function(e,t,i,r){var n=[],a=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],a[0]=n[0]*Math.cos(r)-n[1]*Math.sin(r),a[1]=n[0]*Math.sin(r)+n[1]*Math.cos(r),a[2]=n[2],e[0]=a[0]+i[0],e[1]=a[1]+i[1],e[2]=a[2]+i[2],e},t.forEach=function(){var e=t.create();return function(t,i,r,n,a,o){var s,l;for(i||(i=3),r||(r=0),l=n?Math.min(n*i+r,t.length):t.length,s=r;s<l;s+=i)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),t.angle=function(e,i){var r=t.fromValues(e[0],e[1],e[2]),n=t.fromValues(i[0],i[1],i[2]);t.normalize(r,r),t.normalize(n,n);var a=t.dot(r,n);return a>1?0:Math.acos(a)},t.str=function(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},t.equals=function(t,i){var r=t[0],n=t[1],a=t[2],o=i[0],s=i[1],l=i[2];return Math.abs(r-o)<=e.EPSILON*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(n-s)<=e.EPSILON*Math.max(1,Math.abs(n),Math.abs(s))&&Math.abs(a-l)<=e.EPSILON*Math.max(1,Math.abs(a),Math.abs(l))},t}.apply(null,r))||(e.exports=n)},1528:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1630),i(2124),i(2125),i(2126),i(2123),i(2127),i(2128),i(2129),i(1426)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h){var f=new h;return h.parse(r,f),h.parse(i,f),h.parse(a,f),h.parse(l,f),h.parse(s,f),h.parse(o,f),h.parse(u,f),h.parse(n,f),f}.apply(null,r))||(e.exports=n)},1540:function(e,t,i){var r,n;r=[i.dj.c(e.i),t],void 0===(n=function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=new Uint32Array(1),r=new Uint8Array(i.buffer);t.int32To4Bytes=function(e){return i[0]=0|e,[r[0],r[1],r[2],r[3]]}}.apply(null,r))||(e.exports=n)},1627:function(e,t,i){var r,n;r=[i.dj.c(e.i),t],void 0===(n=function(e,t){return function(){function e(e){this._array=[],e<=0&&console.error("strideInBytes must be positive!"),this._stride=e}return Object.defineProperty(e.prototype,"array",{get:function(){return this._array},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"index",{get:function(){return 4*this._array.length/this._stride},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemSize",{get:function(){return this._stride},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sizeInBytes",{get:function(){return 4*this._array.length},enumerable:!0,configurable:!0}),e.prototype.reset=function(){this.array.length=0},e.prototype.toBuffer=function(){return new Uint32Array(this._array).buffer},e.i1616to32=function(e,t){return 65535&e|t<<16},e.i8888to32=function(e,t,i,r){return 255&e|(255&t)<<8|(255&i)<<16|r<<24},e.i8816to32=function(e,t,i){return 255&e|(255&t)<<8|i<<16},e}()}.apply(null,r))||(e.exports=n)},1630:function(e,t){e.exports='<snippets>\n  <snippet name="tileInfoVS">\n  <![CDATA[\n    attribute vec2 a_pos;\n\n    uniform highp mat4 u_transformMatrix;\n    uniform mediump vec2 u_normalized_origin;\n    uniform mediump float u_depth;\n    uniform mediump float u_coord_ratio;\n    uniform mediump vec2 u_delta; // in tile coordinates\n    uniform mediump vec2 u_dimensions; // in tile coordinates\n\n    varying mediump vec2 v_tex;\n\n    void main() {\n      mediump vec2 offests = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\n      gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(offests, 0.0, 1.0);\n\n      v_tex = a_pos;\n    }\n  ]]>\n  </snippet>\n\n  <snippet name="tileInfoFS">\n  <![CDATA[\n    uniform mediump sampler2D u_texture;\n    varying mediump vec2 v_tex;\n\n    void main(void) {\n      lowp vec4 color = texture2D(u_texture, v_tex);\n      gl_FragColor = 0.75 * color;\n    }\n  ]]>\n  </snippet>\n</snippets>\n'},1668:function(e,t,i){var r,n;r=[i.dj.c(e.i),t],void 0===(n=function(e,t){return function(){function e(e){if(this._cache={},this._lruQueue=[],e<=0)throw new Error("LRU cache size must be bigger than zero!");this._maxSize=e}return e.prototype.has=function(e){return void 0!==this._cache[e]},e.prototype.insert=function(e,t){null===this.use(e)?(this._collect(),this._cache[e]=t,this._lruQueue.unshift(e)):this._cache[e]=t},e.prototype.use=function(e){var t=this._cache[e];return t?(this._lruQueue.splice(this._lruQueue.indexOf(e),1),this._lruQueue.unshift(e),t):null},e.prototype.print=function(){for(var e=0,t=this._lruQueue;e<t.length;e++){var i=t[e];console.log("key: "+i+", value: "+this._cache[i])}},e.prototype._collect=function(){if(!(this._lruQueue.length<this._maxSize)){var e=this._lruQueue.pop(),t=this._cache[e];t&&t.release&&t.release(),delete this._cache[e]}},e}()}.apply(null,r))||(e.exports=n)},1693:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(5),i(1279)],void 0===(n=function(e,t,i,r){return function(){function e(e,t,i){var n;"string"==typeof e?n=e:(n=e.programNamePrefix,t=e.shaderSnippetPrefixes,i=e.baseDefines),r.assert(t,"you must specify shader snippet prefixes"),r.assert(2===t.length,"you must specify shader snippet prefixes for vertex and fragment shaders"),i&&0!==i.length||(i=[]),this.programNamePrefix=n,this.shaderSnippetPrefixes=t,this.baseDefines=i,this.variables=[],this.sealed=!1}return e.prototype.addDefine=function(e,t,i,n){r.assert(!this.sealed,"you cannot add another variable after the first program has been generated"),r.assert(e,"you must specify a program name suffix"),this.variables.push({programNameSuffixes:["",e],shaderNameSuffixes:n||e,defineStr:t,affectsShaderTypes:i||[!0,!0]})},e.prototype.addBinaryShaderSnippetSuffix=function(e,t,i){r.assert(!this.sealed,"you cannot add another variable after the first program has been generated"),r.assert(e,"you must specify a program name suffix"),this.variables.push({programNameSuffixes:["",e],shaderSnippetSuffixes:["",t],affectsShaderTypes:i||[!0,!0]})},e.prototype.addNaryShaderSnippetSuffix=function(e,t){r.assert(!this.sealed,"you cannot add another variable after the first program has been generated");var i=e.map(function(e){return r.assert(null!=e.value,"value must always be specified"),e.value});this.variables.push({values:i,programNameSuffixes:e.map(function(e,t){return null!=e.programNameSuffix?e.programNameSuffix:i[t]}),shaderSnippetSuffixes:e.map(function(e,t){return null!=e.shaderSnippetSuffix?e.shaderSnippetSuffix:i[t]}),affectsShaderTypes:t||[!0,!0]})},e.prototype.getShaderVariation=function(e){r.assert(e.length===this.variables.length,"you must specify a value for each variable");for(var t=this.programNamePrefix,n=i.clone(this.shaderSnippetPrefixes),a=i.clone(this.shaderSnippetPrefixes),o=i.clone(this.baseDefines),s=0;s<this.variables.length;s++){var l=this.variables[s],u=e[s],h=void 0;l.values?(h=l.values.indexOf(u),r.assert(h>=0,"invalid value "+u+" for variable "+s)):h=u?1:0,t+=l.programNameSuffixes[h];for(var f=0;f<2;f++)l.affectsShaderTypes[f]&&(l.shaderSnippetSuffixes&&(n[f]+=l.shaderSnippetSuffixes[h],a[f]+=l.shaderSnippetSuffixes[h]),l.defineStr&&h&&(o.push(l.defineStr),a[f]+=l.shaderNameSuffixes))}return{programName:t,shaderSnippetNames:n,shaderNames:a,defines:o}},e}()}.apply(null,r))||(e.exports=n)},1706:function(e,t,i){var r,n;r=[i.dj.c(e.i),t],void 0===(n=function(e,t){return function(){function e(e,t,i,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===i&&(i=0),void 0===r&&(r=0),this.x=e,this.y=t,this.width=i,this.height=r}return Object.defineProperty(e.prototype,"isEmpty",{get:function(){return this.width<=0||this.height<=0},enumerable:!0,configurable:!0}),e}()}.apply(null,r))||(e.exports=n)},1775:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(23),i(9),i(78),i(27),i(1668),i(6),i(1323),i(410),i(149),i(203),i(2114),i(2115),i(2116),i(2117),i(2118),i(1777),i.dj.m(e)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h,f,d,c,p,_,m,v,x){var g=new o(10),D=new Map;return function(){function t(e,t,i,r,n){void 0===r&&(r=!1),this.devicePixelRatio=i,this.allowUpdates=r,this._spriteMosaic=null,this._glyphMosaic=null,this._connection=null,this._tileIndex=null,this._updateQueue=new Map,this._ongoingRequests=new Map,this._vectorTileLayer=e,this._styleRepository=e.styleRepository,this._requestUpdate=t}return t.prototype.destroy=function(){this.stop(),this._vectorTileLayer=this._requestUpdate=this._styleRepository=null,this._spriteMosaic&&(this._spriteMosaic.dispose(),this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null)},Object.defineProperty(t.prototype,"initialized",{get:function(){return this._broadcastPromise&&this._broadcastPromise.isFulfilled()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"spriteMosaic",{get:function(){return this._spriteMosaic},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"glyphMosaic",{get:function(){return this._glyphMosaic},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ongoingRequestCount",{get:function(){return this._ongoingRequests.size},enumerable:!0,configurable:!0}),t.prototype.start=function(){var t=this;this.stop();var a=this._styleRepository,o=new _(a.sprite,this.devicePixelRatio);o.devicePixelRatio=this.devicePixelRatio;var s=o.load().then(function(){t._spriteMosaic=new p(1024,1024,250),t._spriteMosaic.setSpriteSource(o),r("stable-symbol-rendering")&&t._spriteMosaic.preloadSpriteItems()}),h=new c(a.glyphs);this._glyphMosaic=new d(1024,1024,h);var f=this._fetchTileMap(this._vectorTileLayer.tileIndexUrl),m=u.open(l.getAbsMid("./WorkerTileHandler",e,x),{client:this}).then(function(e){t._connection=e}),v=new i(function(e){s.isFulfilled()||s.cancel(),f.isFulfilled()||f.cancel(),m.isFulfilled()||m.cancel()});return n([s,f,m]).then(function(e){n(t._connection.broadcast("setLayers",a.styleJSON)).then(function(){v.resolve()})}),this._broadcastPromise=v.promise,this._broadcastPromise},t.prototype.stop=function(){this._broadcastPromise&&!this._broadcastPromise.isFulfilled()&&this._broadcastPromise.cancel(),this._updateQueue.forEach(function(e){return e.cancel()}),this._ongoingRequests.forEach(function(e){return e.cancel()}),this._connection&&(this._connection.close(),this._connection=null)},t.prototype.updateTile=function(e,t){var i=this;if(!this.allowUpdates)return s.resolve(null);if(!this._broadcastPromise.isFulfilled()||!this._connection)return s.reject(new Error("no connection"));var r=Math.round(f.degToByte(t.state.rotation));if(e.rotation===r)return s.resolve(null);var n,a=e.key;return this._updateQueue.has(a.id)&&(n=this._updateQueue.get(a.id)).cancel(),e.rotation=r,n=this._connection.invoke("update",{key:e.id,rotation:r},null,{client:e.client}).then(function(t){return e.updateSymbolData(t),t}).always(function(){i._updateQueue.delete(a.id)}),this._updateQueue.set(e.id,n),n},t.prototype.getVectorTileWithLRC=function(e,t,i,r){var n=this;void 0===r&&(r=0);var a=new h(e,t,i,0);return this.getRefKey(a).then(function(e){var t=new v(a,e,n._vectorTileLayer.tileInfo,n._styleRepository,0);return e?n.getTileData(t.key,0).then(function(e){return t.setData(e.tileData,e.client),t}):(t.setData(null,null),t)})},t.prototype.getTileData=function(e,t){var i=this;return this._broadcastPromise.isFulfilled()&&this._connection?this.getRefKey(e).then(function(r){if(!r)return s.resolve(null);var n=Math.round(f.degToByte(t));return i._getTileData(i._connection,e,r,n).then(function(e){return e&&e.tileData?{tileData:e.tileData,client:e.client}:s.reject("No data")})}):s.reject(new Error("no connection"))},t.prototype.getRefKey=function(e){return this._tileIndex?this._tileIndex.dataKey(e):s.resolve(e)},t.prototype.fetchTileData=function(e){var t=h.pool.acquire(e),i=this._vectorTileLayer.getTileUrl(t.level,t.row,t.col);return h.pool.release(t),a(i,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(e){return{result:e.data,transferList:[e.data]}})},t.prototype.getSprites=function(e){return this._spriteMosaic.getSpriteItems(e)},t.prototype.getGlyphs=function(e){return this._glyphMosaic.getGlyphItems(e.tileID,e.font,e.codePoints)},t.prototype.getStyleRepository=function(){return this._styleRepository},t.prototype.getTileIndex=function(){return this._tileIndex},t.prototype._getTileData=function(e,t,i,r){var n=this,a={client:null},o=this._ongoingRequests.get(t.id);return o||(o=this._connection.invoke("getTile",{key:t.id,refKey:i.id,rotation:r,cacheTile:this.allowUpdates},null,a).then(function(e){return n._ongoingRequests.delete(t.id),{tileData:e,client:a.client}}).catch(function(e){return n._ongoingRequests.delete(t.id),n._connection.invoke("destructTileData",t.id,null,a),s.reject(e)}),this._ongoingRequests.set(t.id,o),o)},t.prototype._fetchTileMap=function(e){var t=this;if(this._vectorTileLayer.capabilities.operations.supportsTileMap&&this._vectorTileLayer.tilemapCache)return this._tileIndex=new m(this._vectorTileLayer.tilemapCache),s.resolve();if(!e)return s.resolve();if(g.has(e))return this._tileIndex=g.use(e),s.resolve();if(D.has(e))return D.get(e).then(function(e){t._tileIndex=new m(e.data)});var i=a(e,{callbackParamName:"callback",responseType:"json"});return i.then(function(i){t._tileIndex=new m(i.data),D.delete(e),g.insert(e,t._tileIndex)}),D.set(e,i),i},t}()}.apply(null,r))||(e.exports=n)},1776:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1706)],void 0===(n=function(e,t,i){return function(){function e(e,t){this._width=0,this._height=0,this._free=[],this._width=e,this._height=t,this._free.push(new i(0,0,e,t))}return Object.defineProperty(e.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0}),e.prototype.allocate=function(e,t){if(e>this._width||t>this._height)return new i;for(var r=null,n=-1,a=0;a<this._free.length;++a){var o=this._free[a];e<=o.width&&t<=o.height&&(null===r||o.y<=r.y&&o.x<=r.x)&&(r=o,n=a)}return null===r?new i:(this._free.splice(n,1),r.width<r.height?(r.width>e&&this._free.push(new i(r.x+e,r.y,r.width-e,t)),r.height>t&&this._free.push(new i(r.x,r.y+t,r.width,r.height-t))):(r.width>e&&this._free.push(new i(r.x+e,r.y,r.width-e,r.height)),r.height>t&&this._free.push(new i(r.x,r.y+t,e,r.height-t))),new i(r.x,r.y,e,t))},e.prototype.release=function(e){for(var t=0;t<this._free.length;++t){var i=this._free[t];if(i.y===e.y&&i.height===e.height&&i.x+i.width===e.x)i.width+=e.width;else if(i.x===e.x&&i.width===e.width&&i.y+i.height===e.y)i.height+=e.height;else if(e.y===i.y&&e.height===i.height&&e.x+e.width===i.x)i.x=e.x,i.width+=e.width;else{if(e.x!==i.x||e.width!==i.width||e.y+e.height!==i.y)continue;i.y=e.y,i.height+=e.height}this._free.splice(t,1),this.release(e)}this._free.push(e)},e}()}.apply(null,r))||(e.exports=n)},1777:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(10),i(76),i(1447),i(419),i(47),i(207),i(1324),i(149),i(2119),i(1287)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h,f){var d=["fillVertexBuffer","fillDDVertexBuffer","fillIndexBuffer","outlineVertexBuffer","outlineDDVertexBuffer","outlineIndexBuffer","lineVertexBuffer","lineDDVertexBuffer","lineIndexBuffer","iconVertexBuffer","iconDDVertexBuffer","iconIndexBuffer","textVertexBuffer","textDDVertexBuffer","textIndexBuffer","circleVertexBuffer","circleIndexBuffer"];return function(e){function t(){for(var t,i=[],r=0;r<arguments.length;r++)i[r]=arguments[r];var o=e.call(this)||this;return o._renderBuckets=[],o._vectorTileData=null,o._symbolUpdateData=null,o.status=l.TileStatus.INITIALIZED,o.coords=[0,0],o.bounds=[0,0,0,0],o.tileTransform={transform:Float32Array[16],displayCoord:Float32Array[2]},o.stencilData={mask:0,reference:0},o.status=l.TileStatus.INITIALIZED,o.tileTransform.transform=n.create(),o.tileTransform.displayCoord=a.create(),i.length>0&&(t=o.acquire).call.apply(t,[o].concat(i)),o}return i(t,e),t.prototype.reset=function(){u.pool.release(this.key),this.key=null,this.refKey=null,this.coords[0]=0,this.coords[1]=0,this.bounds[0]=0,this.bounds[1]=0,this.bounds[2]=0,this.bounds[3]=0,this.width=0,this.height=0,this.resolution=null,this.rotation=0,this._vectorTileData=null,this.styleLayers=null,this.client=null,this.id=null,this.tileTransform.transform.fill(0),this.tileTransform.displayCoord.fill(0),this.stencilData.mask=0,this.stencilData.reference=0,this._renderBuckets.length=0,this._symbolUpdateData=null,this.status=l.TileStatus.INITIALIZED},t.prototype.acquire=function(e,t,i,r,n){this.key=e,this.refKey=t;var a=i.lodAt(e.level).resolution,s=i.size[0]*a,l=i.origin,u=e.col*s,h=e.row*s,f=i.spatialReference,d=0;if(f&&(f._isWrappable?f._isWrappable():f.isWrappable)){var c=o.getInfo(f);d=c.valid[1]-c.valid[0]}var p=e.world*d,_=l.x+u+p,m=l.y-h,v=_+s,x=m-s;this.coords[0]=_,this.coords[1]=m,this.bounds[0]=_,this.bounds[1]=m,this.bounds[2]=v,this.bounds[3]=x,this.widthInPixels=i.size[1],this.coordRange=4096,this.resolution=a,this.rotation=n,this.styleLayers=r,this.id=e.id},t.prototype.setData=function(e,t){this._vectorTileData=e,this.client=t,e&&e.bufferDataInfo||(this.status=l.TileStatus.NO_DATA)},t.prototype.updateSymbolData=function(e){e&&(this._symbolUpdateData=e,this.requestRender())},t.prototype.dispose=function(){this.fillVertexArrayObject&&(this.fillVertexArrayObject.dispose(),this.fillVertexArrayObject=null),this.fillDDVertexArrayObject&&(this.fillDDVertexArrayObject.dispose(),this.fillDDVertexArrayObject=null),this.outlineVertexArrayObject&&(this.outlineVertexArrayObject.dispose(),this.outlineVertexArrayObject=null),this.outlineDDVertexArrayObject&&(this.outlineDDVertexArrayObject.dispose(),this.outlineDDVertexArrayObject=null),this.lineVertexArrayObject&&(this.lineVertexArrayObject.dispose(),this.lineVertexArrayObject=null),this.lineDDVertexArrayObject&&(this.lineDDVertexArrayObject.dispose(),this.lineDDVertexArrayObject=null),this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null),this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null),this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null),this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null),this.circleVertexArrayObject&&(this.circleVertexArrayObject.dispose(),this.circleVertexArrayObject=null),this.fillVertexBuffer&&(this.fillVertexBuffer.dispose(),this.fillVertexBuffer=null),this.fillDDVertexBuffer&&(this.fillDDVertexBuffer.dispose(),this.fillDDVertexBuffer=null),this.fillIndexBuffer&&(this.fillIndexBuffer.dispose(),this.fillIndexBuffer=null),this.outlineVertexBuffer&&(this.outlineVertexBuffer.dispose(),this.outlineVertexBuffer=null),this.outlineDDVertexBuffer&&(this.outlineDDVertexBuffer.dispose(),this.outlineDDVertexBuffer=null),this.outlineIndexBuffer&&(this.outlineIndexBuffer.dispose(),this.outlineIndexBuffer=null),this.lineVertexBuffer&&(this.lineVertexBuffer.dispose(),this.lineVertexBuffer=null),this.lineDDVertexBuffer&&(this.lineDDVertexBuffer.dispose(),this.lineDDVertexBuffer=null),this.lineIndexBuffer&&(this.lineIndexBuffer.dispose(),this.lineIndexBuffer=null),this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null),this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null),this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null),this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null),this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=null),this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null),this.circleVertexBuffer&&(this.circleVertexBuffer.dispose(),this.circleVertexBuffer=null),this.circleIndexBuffer&&(this.circleIndexBuffer.dispose(),this.circleIndexBuffer=null),this.texture&&(this.texture.dispose(),this.texture=null),this._renderBuckets.length=0,this.status=l.TileStatus.INITIALIZED},t.prototype.getCpuMemoryUsage=function(){return null!=this._vectorTileData&&this._vectorTileData.bufferData?this._vectorTileData.bufferData.reduce(function(e,t){return e+t.byteLength},0)+this._vectorTileData.bufferDataInfo.byteLength+this._vectorTileData.bucketDataInfo.byteLength:0},t.prototype.getGpuMemoryUsage=function(){var e=this,t=d.reduce(function(t,i){return e[i]?t+e[i].size:t},0);return this.texture&&(t+=this.texture.descriptor.width*this.texture.descriptor.height*4),t},t.prototype.attach=function(e){if(this.status!==l.TileStatus.INITIALIZED)return!0;if(0===this._renderBuckets.length)for(var t=new Uint32Array(this._vectorTileData.bucketDataInfo),i=t.length,r=0;r<i;){var n=t[r],a=t[r+1];if(0===a){var o=new h.BackgroundRenderBucket;o.layerID=n,this._renderBuckets.push(o),r+=2}else if(1===a){var s=new h.FillRenderBucket;s.layerID=n,s.triangleElementStart=t[r+2],s.triangleElementCount=t[r+3],s.outlineElementStart=t[r+4],s.outlineElementCount=t[r+5],this._renderBuckets.push(s),r+=6}else if(2===a){var u=new h.LineRenderBucket;u.layerID=n,u.triangleElementStart=t[r+2],u.triangleElementCount=t[r+3],this._renderBuckets.push(u),r+=4}else if(3===a){var d=new h.SymbolRenderBucket;d.layerID=n,d.isSDF=0!==t[r+2];var c=r+3,p=t[c];if(c++,p>0)for(var _=void 0,m=void 0,v=void 0,x=0;x<p;x++)_=t[c],m=t[c+1],v=t[c+2],d.markerPerPageElementsMap.set(_,[m,v]),c+=3;var g=c,D=t[g];if(g++,D>0)for(_=void 0,m=void 0,v=void 0,x=0;x<D;x++)_=t[g],m=t[g+1],v=t[g+2],d.glyphPerPageElementsMap.set(_,[m,v]),g+=3;this._renderBuckets.push(d),r+=5+3*p+3*D}else if(4===a){var y=new h.CircleRenderBucket;y.layerID=n,y.triangleElementStart=t[r+2],y.triangleElementCount=t[r+3],this._renderBuckets.push(y),r+=4}else console.error("Bad bucket type!")}for(var b=e.context,M=new Uint32Array(this._vectorTileData.bufferDataInfo),I=M.length,S=0,w=0;w<I;w+=2,S++){var F=M[w];if(!(M[w+1]<=0||0===this._vectorTileData.bufferData[S].byteLength))switch(F){case 1:this.fillVertexBuffer?this.fillVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.fillVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 2:this.fillDDVertexBuffer?this.fillDDVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.fillDDVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 3:this.fillIndexBuffer?this.fillIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.fillIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S]);break;case 4:this.outlineVertexBuffer?this.outlineVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.outlineVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 5:this.outlineDDVertexBuffer?this.outlineDDVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.outlineDDVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 6:this.outlineIndexBuffer?this.outlineIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.outlineIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S]);break;case 7:this.lineVertexBuffer?this.lineVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.lineVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 8:this.lineDDVertexBuffer?this.lineDDVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.lineDDVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 9:this.lineIndexBuffer?this.lineIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.lineIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S]);break;case 10:this.iconVertexBuffer?this.iconVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.iconVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 11:this.iconDDVertexBuffer?this.iconDDVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.iconDDVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 12:this.iconIndexBuffer?this.iconIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.iconIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S]);break;case 13:this.textVertexBuffer?this.textVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.textVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 14:this.textDDVertexBuffer?this.textDDVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.textDDVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 15:this.textIndexBuffer?this.textIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.textIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S]);break;case 16:this.circleVertexBuffer?this.circleVertexBuffer.setData(this._vectorTileData.bufferData[S]):this.circleVertexBuffer=f.createVertex(b,35044,this._vectorTileData.bufferData[S]);break;case 17:this.circleIndexBuffer?this.circleIndexBuffer.setData(this._vectorTileData.bufferData[S]):this.circleIndexBuffer=f.createIndex(b,35044,this._vectorTileData.bufferData[S])}}return this._vectorTileData=null,this.status=l.TileStatus.READY,!0},t.prototype.detach=function(t){this.client&&this.status!==l.TileStatus.INVALID&&this.status!==l.TileStatus.INITIALIZED&&this.client.invoke("destructTileData",this.id),this.dispose(),e.prototype.detach.call(this,t)},t.prototype.doRender=function(e){if(this.visible&&this.status===l.TileStatus.READY){var t=e.context,i=e.renderer;if(t&&i){var r=e.drawphase;this._symbolUpdateData&&this._updateSymbolData(e),t.setStencilFunction(514,this.stencilData.reference,this.stencilData.mask);var n=this.styleLayers,a=void 0!==e.layerOpacity?e.layerOpacity:1;if(0!==a){var o,s=this._renderBuckets.length,u=0;if(0===r)for(u=s-1;u>=0;u--)3!==(o=this._renderBuckets[u]).type&&4!==o.type&&o.hasData()&&i.renderBucket(t,o,e.displayLevel,e.requiredLevel,r,this,n.layers[o.layerID],a);else for(u=0;u<s;u++)(o=this._renderBuckets[u]).hasData()&&i.renderBucket(t,o,e.displayLevel,e.requiredLevel,r,this,n.layers[o.layerID],a)}}}},t.prototype._updateSymbolData=function(e){if(!this._symbolUpdateData.bucketDataInfo)return!0;var t=new Uint32Array(this._symbolUpdateData.bucketDataInfo),i=t.length;if(0===i)return this._symbolUpdateData=null,!0;if(this.status!==l.TileStatus.READY)return this.requestRender(),!1;for(var r=e.context,n=new Uint32Array(this._symbolUpdateData.bufferDataInfo),a=n.length,o=0,s=0;s<a;s+=2,o++)switch(n[s]){case 10:this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null),this.iconVertexBuffer=f.createVertex(r,35044,this._symbolUpdateData.bufferData[o]);break;case 11:this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null),this.iconDDVertexBuffer=f.createVertex(r,35044,this._symbolUpdateData.bufferData[o]);break;case 12:this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null),this.iconIndexBuffer=f.createIndex(r,35044,this._symbolUpdateData.bufferData[o]);break;case 13:this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null),this.textVertexBuffer=f.createVertex(r,35044,this._symbolUpdateData.bufferData[o]);break;case 14:this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=null),this.textDDVertexBuffer=f.createVertex(r,35044,this._symbolUpdateData.bufferData[o]);break;case 15:this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null),this.textIndexBuffer=f.createIndex(r,35044,this._symbolUpdateData.bufferData[o])}for(var u=this._renderBuckets.length,d=0;d<u;d++)if(this._renderBuckets[d]instanceof h.SymbolRenderBucket){var c=this._renderBuckets[d];c.markerPerPageElementsMap.clear(),c.glyphPerPageElementsMap.clear()}for(var p,_,m=0;m<i;){var v=t[m];_=-1;var x=this._renderBuckets.length;for(d=0;d<x;d++)if(this._renderBuckets[d].layerID===v){_=d;break}(p=this._renderBuckets[_])||((p=new h.SymbolRenderBucket).layerID=v,p.isSDF=0!==t[m+2],this._renderBuckets.push(p));var g=m+3,D=t[g];if(g++,D>0)for(var y=void 0,b=void 0,M=void 0,I=0;I<D;I++)y=t[g],b=t[g+1],M=t[g+2],p.markerPerPageElementsMap.set(y,[b,M]),g+=3;var S=g,w=t[S];if(S++,w>0)for(y=void 0,b=void 0,M=void 0,I=0;I<w;I++)y=t[S],b=t[S+1],M=t[S+2],p.glyphPerPageElementsMap.set(y,[b,M]),S+=3;m+=5+3*D+3*w}return this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null),this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null),this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null),this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null),this._symbolUpdateData=null,!0},t.pool=new r(t),t}(s)}.apply(null,r))||(e.exports=n)},1778:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1447),i(203),i(2122),i(2130),i(2121),i(2131),i(2132),i(2133),i(2136),i(1285)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h,f){return function(){function e(){this._extrudeRotateVector=new Float32Array([0,0,1]),this._extrudeScaleVector=new Float32Array([1,1,1]),this._state={rotation:0,width:0,height:0},this._cachedWidth=0,this._cachedHeight=0,this._cachedRotation=0}return e.prototype.initialize=function(e,t,i){void 0===i&&(i=!0),this._SpriteMosaic=e,this._glyphMosaic=t,this._ignoreSpeed=!i,this._backgroundRenderer=new n,this._lineRenderer=new l,this._fillRenderer=new s,this._symbolRenderer=new u,this._circleRenderer=new a,this._tileInfoRenderer=new h,this._fadeRecorder=new o.FadeRecorder(300),this._extrudeMatrix=new Float32Array(16),this._extrudeNoRotationMatrix=new Float32Array(16),this._backgroundColor=new Float32Array([1,0,0,1])},e.prototype.dispose=function(){this._backgroundRenderer&&(this._backgroundRenderer.dispose(),this._backgroundRenderer=null),this._lineRenderer&&(this._lineRenderer.dispose(),this._lineRenderer=null),this._fillRenderer&&(this._fillRenderer.dispose(),this._fillRenderer=null),this._symbolRenderer&&(this._symbolRenderer.dispose(),this._symbolRenderer=null),this._circleRenderer&&(this._circleRenderer.dispose(),this._circleRenderer=null),this._tileInfoRenderer&&(this._tileInfoRenderer.dispose(),this._tileInfoRenderer=null),this._hittestFBO&&(this._hittestFBO.dispose(),this._hittestFBO=null)},e.prototype.setStateParams=function(e,t,n){this._fadeRecorder.recordLevel(n),this._state=e,this._state.width===this._cachedWidth&&this._state.height===this._cachedHeight&&this._state.rotation===this._cachedRotation||(this._extrudeScaleVector[0]=2/e.width,this._extrudeScaleVector[1]=-2/e.height,i.identity(this._extrudeMatrix),i.rotate(this._extrudeMatrix,this._extrudeMatrix,-e.rotation*r.C_DEG_TO_RAD,this._extrudeRotateVector),i.scale(this._extrudeMatrix,this._extrudeMatrix,this._extrudeScaleVector),i.transpose(this._extrudeMatrix,this._extrudeMatrix),i.identity(this._extrudeNoRotationMatrix),i.scale(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix,this._extrudeScaleVector),i.transpose(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix),this._cachedWidth=this._state.width,this._cachedHeight=this._state.height,this._cachedRotation=this._state.rotation)},e.prototype.drawClippingMasks=function(e,t){if(0!==t.length){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(7680,7680,7681),e.setStencilWriteMask(255),e.setClearStencil(0);var i=e.gl;e.clear(i.STENCIL_BUFFER_BIT);for(var r=0,n=t;r<n.length;r++){var a=n[r];a.attached&&a.visible&&(e.setStencilFunctionSeparate(1032,519,a.stencilData.reference,a.stencilData.mask),this._backgroundRenderer.renderSolidColor(e,{u_matrix:a.tileTransform.transform,u_normalized_origin:a.tileTransform.displayCoord,u_coord_range:a.coordRange,u_depth:0,u_color:this._backgroundColor}))}e.setColorMask(!0,!0,!0,!0),e.setBlendingEnabled(!0)}},e.prototype.renderDebug=function(e,t){var i=t.key;this._backgroundColor.set([i.col%2,i.row%2,i.col%2==0&&i.row%2==0?1:0,.5]),this._backgroundRenderer.renderSolidColor(e,{u_matrix:t.tileTransform.transform,u_normalized_origin:t.tileTransform.displayCoord,u_coord_range:t.coordRange,u_depth:0,u_color:this._backgroundColor})},e.prototype.renderBucket=function(e,t,i,r,n,a,o,s){if(!(void 0!==o.minzoom&&o.minzoom>i||void 0!==o.maxzoom&&o.maxzoom<=i))switch(t.type){case 0:2!==n&&this._renderBackground(e,t,i,n,a,o,s);break;case 1:2!==n&&this._renderFill(e,t,i,n,a,o,s);break;case 2:1!==n&&3!==n||this._renderLine(e,t,i,n,a,o,s);break;case 3:2!==n&&3!==n||this._renderSymbol(e,t,i,n,r,a,o,s);break;case 4:2!==n&&3!==n||this._renderCircle(e,t,i,n,r,a,o,s)}},e.prototype.renderTileInfo=function(e,t){this._tileInfoRenderer.render(e,t)},e.prototype.needsRedraw=function(){return this._fadeRecorder.needsRedraw()},e.prototype.hitTest=function(e,t,i,r,n,a,o){var s=[0,0],l=[0,0],u=e.state;u.toMap(s,[0,0]),u.toMap(l,[a,a]);var h=r.filter(function(e){return!(s[0]>e.bounds[2]||l[0]<e.bounds[0]||s[1]<e.bounds[3]||l[1]>e.bounds[1])});if(0===h.length)return[];h.sort(function(e,t){return e.key.level-t.key.level});for(var d=h.length,c=1;c<=d;c++){(g=h[c-1]).attached&&(g.stencilData.reference=c,g.stencilData.mask=255)}o(u,n,h);var p=e.context;this._hittestFBO||(this._hittestFBO=f.create(p,{colorTarget:0,depthStencilTarget:3,width:a,height:a}));var _=p.getViewport(),m=p.getBoundFramebufferObject();p.bindFramebuffer(this._hittestFBO),p.setViewport(0,0,a,a);var v=p.gl;p.setDepthWriteEnabled(!0),p.setStencilWriteMask(255),p.setClearColor(1,1,1,1),p.setClearDepth(1),p.setClearStencil(0),p.clear(v.COLOR_BUFFER_BIT|v.DEPTH_BUFFER_BIT|v.STENCIL_BUFFER_BIT),p.setDepthWriteEnabled(!1),this.drawClippingMasks(p,h),p.setBlendingEnabled(!1),p.setStencilWriteMask(0),p.setStencilOp(7680,7680,7681),p.setDepthFunction(515),p.setDepthTestEnabled(!0),p.setDepthWriteEnabled(!0),p.setStencilTestEnabled(!0);for(var x=0;x<d;x++){var g;(g=h[x]).attached&&g.doRender(e)}p.setStencilTestEnabled(!1),p.setDepthTestEnabled(!1),this._readbackBuffer||(this._readbackBuffer=new Uint8Array(4*a*a),this._readbackBuffer32=new Uint32Array(this._readbackBuffer.buffer)),this._hittestFBO.readPixels(0,0,a,a,6408,5121,this._readbackBuffer);var D=new Set,y=a*a,b=Math.round(y/2),M=this._readbackBuffer32[b];4294967295!==M&&D.add(M);for(c=0;c<y;c++)4294967295!==(M=this._readbackBuffer32[c])&&D.add(M);p.bindFramebuffer(m),p.setViewport(_.x,_.y,_.width,_.height);var I=[];return D.forEach(function(e){I.push(e)}),I},e.prototype._renderBackground=function(e,t,i,r,n,a,o){this._backgroundRenderer.render(e,t,i,r,n,a,this._SpriteMosaic,this._SpriteMosaic.pixelRatio,o)},e.prototype._renderLine=function(e,t,i,r,n,a,o){this._lineRenderer.render(e,t,i,r,this._state,n,a,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,o)},e.prototype._renderFill=function(e,t,i,r,n,a,o){this._fillRenderer.render(e,t,i,this._state.rotation,r,n,a,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,o)},e.prototype._renderCircle=function(e,t,i,r,n,a,o,s){var l=!0;n===a.key.level&&(l=!1),e.setStencilTestEnabled(l),this._circleRenderer.render(e,t,i,r,this._state.rotation,a,o,this._extrudeMatrix,s)},e.prototype._renderSymbol=function(e,t,i,r,n,a,o,s){var l=!0;n===a.key.level&&(l=!1),e.setStencilTestEnabled(l),this._symbolRenderer.render(e,t,i,r,this._state.rotation,this._fadeRecorder.getFadeValues(this._ignoreSpeed),a,o,this._SpriteMosaic,this._glyphMosaic,this._extrudeMatrix,this._extrudeNoRotationMatrix,this._SpriteMosaic.pixelRatio,s)},e}()}.apply(null,r))||(e.exports=n)},1779:function(e,t,i){var r,n;r=[i(209)],void 0===(n=function(e){var t={create:function(){var t=new e.ARRAY_TYPE(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat4:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},clone:function(t){var i=new e.ARRAY_TYPE(9);return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i},copy:function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},fromValues:function(t,i,r,n,a,o,s,l,u){var h=new e.ARRAY_TYPE(9);return h[0]=t,h[1]=i,h[2]=r,h[3]=n,h[4]=a,h[5]=o,h[6]=s,h[7]=l,h[8]=u,h},set:function(e,t,i,r,n,a,o,s,l,u){return e[0]=t,e[1]=i,e[2]=r,e[3]=n,e[4]=a,e[5]=o,e[6]=s,e[7]=l,e[8]=u,e},identity:function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},transpose:function(e,t){if(e===t){var i=t[1],r=t[2],n=t[5];e[1]=t[3],e[2]=t[6],e[3]=i,e[5]=t[7],e[6]=r,e[7]=n}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},invert:function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],f=h*o-s*u,d=-h*a+s*l,c=u*a-o*l,p=i*f+r*d+n*c;return p?(p=1/p,e[0]=f*p,e[1]=(-h*r+n*u)*p,e[2]=(s*r-n*o)*p,e[3]=d*p,e[4]=(h*i-n*l)*p,e[5]=(-s*i+n*a)*p,e[6]=c*p,e[7]=(-u*i+r*l)*p,e[8]=(o*i-r*a)*p,e):null},adjoint:function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8];return e[0]=o*h-s*u,e[1]=n*u-r*h,e[2]=r*s-n*o,e[3]=s*l-a*h,e[4]=i*h-n*l,e[5]=n*a-i*s,e[6]=a*u-o*l,e[7]=r*l-i*u,e[8]=i*o-r*a,e},determinant:function(e){var t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*(u*a-o*l)+i*(-u*n+o*s)+r*(l*n-a*s)},multiply:function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=i[0],c=i[1],p=i[2],_=i[3],m=i[4],v=i[5],x=i[6],g=i[7],D=i[8];return e[0]=d*r+c*o+p*u,e[1]=d*n+c*s+p*h,e[2]=d*a+c*l+p*f,e[3]=_*r+m*o+v*u,e[4]=_*n+m*s+v*h,e[5]=_*a+m*l+v*f,e[6]=x*r+g*o+D*u,e[7]=x*n+g*s+D*h,e[8]=x*a+g*l+D*f,e}};return t.mul=t.multiply,t.translate=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=i[0],c=i[1];return e[0]=r,e[1]=n,e[2]=a,e[3]=o,e[4]=s,e[5]=l,e[6]=d*r+c*o+u,e[7]=d*n+c*s+h,e[8]=d*a+c*l+f,e},t.rotate=function(e,t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=Math.sin(i),c=Math.cos(i);return e[0]=c*r+d*o,e[1]=c*n+d*s,e[2]=c*a+d*l,e[3]=c*o-d*r,e[4]=c*s-d*n,e[5]=c*l-d*a,e[6]=u,e[7]=h,e[8]=f,e},t.scale=function(e,t,i){var r=i[0],n=i[1];return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=n*t[3],e[4]=n*t[4],e[5]=n*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},t.fromTranslation=function(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=t[0],e[7]=t[1],e[8]=1,e},t.fromRotation=function(e,t){var i=Math.sin(t),r=Math.cos(t);return e[0]=r,e[1]=i,e[2]=0,e[3]=-i,e[4]=r,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.fromScaling=function(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=t[1],e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},t.fromQuat=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=i+i,s=r+r,l=n+n,u=i*o,h=r*o,f=r*s,d=n*o,c=n*s,p=n*l,_=a*o,m=a*s,v=a*l;return e[0]=1-f-p,e[3]=h-v,e[6]=d+m,e[1]=h+v,e[4]=1-u-p,e[7]=c-_,e[2]=d-m,e[5]=c+_,e[8]=1-u-f,e},t.normalFromMat4=function(e,t){var i=t[0],r=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],u=t[7],h=t[8],f=t[9],d=t[10],c=t[11],p=t[12],_=t[13],m=t[14],v=t[15],x=i*s-r*o,g=i*l-n*o,D=i*u-a*o,y=r*l-n*s,b=r*u-a*s,M=n*u-a*l,I=h*_-f*p,S=h*m-d*p,w=h*v-c*p,F=f*m-d*_,V=f*v-c*_,z=d*v-c*m,A=x*z-g*V+D*F+y*w-b*S+M*I;return A?(A=1/A,e[0]=(s*z-l*V+u*F)*A,e[1]=(l*w-o*z-u*S)*A,e[2]=(o*V-s*w+u*I)*A,e[3]=(n*V-r*z-a*F)*A,e[4]=(i*z-n*w+a*S)*A,e[5]=(r*w-i*V-a*I)*A,e[6]=(_*M-m*b+v*y)*A,e[7]=(m*D-p*M-v*g)*A,e[8]=(p*b-_*D+v*x)*A,e):null},t.str=function(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"},t.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))},t.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e[4]=t[4]+i[4],e[5]=t[5]+i[5],e[6]=t[6]+i[6],e[7]=t[7]+i[7],e[8]=t[8]+i[8],e},t.subtract=function(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e[4]=t[4]-i[4],e[5]=t[5]-i[5],e[6]=t[6]-i[6],e[7]=t[7]-i[7],e[8]=t[8]-i[8],e},t.sub=t.subtract,t.multiplyScalar=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*i,e},t.multiplyScalarAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e[3]=t[3]+i[3]*r,e[4]=t[4]+i[4]*r,e[5]=t[5]+i[5]*r,e[6]=t[6]+i[6]*r,e[7]=t[7]+i[7]*r,e[8]=t[8]+i[8]*r,e},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},t.equals=function(t,i){var r=t[0],n=t[1],a=t[2],o=t[3],s=t[4],l=t[5],u=t[6],h=t[7],f=t[8],d=i[0],c=i[1],p=i[2],_=i[3],m=i[4],v=i[5],x=t[6],g=i[7],D=i[8];return Math.abs(r-d)<=e.EPSILON*Math.max(1,Math.abs(r),Math.abs(d))&&Math.abs(n-c)<=e.EPSILON*Math.max(1,Math.abs(n),Math.abs(c))&&Math.abs(a-p)<=e.EPSILON*Math.max(1,Math.abs(a),Math.abs(p))&&Math.abs(o-_)<=e.EPSILON*Math.max(1,Math.abs(o),Math.abs(_))&&Math.abs(s-m)<=e.EPSILON*Math.max(1,Math.abs(s),Math.abs(m))&&Math.abs(l-v)<=e.EPSILON*Math.max(1,Math.abs(l),Math.abs(v))&&Math.abs(u-x)<=e.EPSILON*Math.max(1,Math.abs(u),Math.abs(x))&&Math.abs(h-g)<=e.EPSILON*Math.max(1,Math.abs(h),Math.abs(g))&&Math.abs(f-D)<=e.EPSILON*Math.max(1,Math.abs(f),Math.abs(D))},t}.apply(null,r))||(e.exports=n)},2114:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(9),i(6),i(1706),i(1776),i(1280)],void 0===(n=function(e,t,i,r,n,a,o){var s;return i("stable-symbol-rendering")&&(s=new Set),function(){function e(e,t,i){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,(e<=0||t<=0)&&console.error("Glyph mosaic width and height must be greater than zero!"),this.width=e,this.height=t,this._glyphSource=i,this._binPack=new a(e-4,t-4),this._glyphData.push(new Uint8Array(e*t)),this._dirties.push(!0),this._textures.push(void 0)}return e.prototype.getGlyphItems=function(e,t,o){for(var l=this,u=[],h=this._glyphSource,f=new Set,d=0,c=o;d<c.length;d++){var p=c[d],_=Math.floor(p*(1/256));f.add(_)}var m=[];return f.forEach(function(e){if(e<=256){var i=t+e;if(l._rangePromises.has(i))m.push(l._rangePromises.get(i));else{var r=h.getRange(t,e).always(function(){l._rangePromises.delete(i)});l._rangePromises.set(i,r),m.push(r)}}}),r.all(m).then(function(e){var r,d=l._glyphIndex[t];if(d||(d={},l._glyphIndex[t]=d),i("stable-symbol-rendering")){s.clear();for(var c=0,p=o;c<p.length;c++){var _=p[c];s.add(_)}var m=[];f.forEach(function(e){m.push(e)}),m.sort(),r=[];for(var v=0,x=m;v<x.length;v++)for(var g=x[v],D=0;D<256;++D)r.push(256*g+D)}else r=o;for(var y=0,b=r;y<b.length;y++){var M=d[_=b[y]];if(M)i("stable-symbol-rendering")&&!s.has(_)||(u[_]={rect:M.rect,metrics:M.metrics,page:M.page});else{var I=h.getGlyph(t,_);if(I&&I.metrics){var S=I.metrics,w=void 0;if(0===S.width)w=new n(0,0,0,0);else{var F=S.width+6,V=S.height+6,z=F%4?4-F%4:4,A=V%4?4-V%4:4;1===z&&(z=5),1===A&&(A=5),(w=l._binPack.allocate(F+z,V+A)).isEmpty&&(l._dirties[l._currentPage]||(l._glyphData[l._currentPage]=null),l._currentPage=l._glyphData.length,l._glyphData.push(new Uint8Array(l.width*l.height)),l._dirties.push(!0),l._textures.push(void 0),l._binPack=new a(l.width-4,l.height-4),w=l._binPack.allocate(F+z,V+A));var T=l._glyphData[l._currentPage],P=I.bitmap,O=void 0,R=void 0;if(P)for(var k=0;k<V;k++){O=F*k,R=l.width*(w.y+k+1)+w.x;for(var B=0;B<F;B++)T[R+B+1]=P[O+B]}}d[_]={rect:w,metrics:S,tileIDs:null,page:l._currentPage},i("stable-symbol-rendering")&&!s.has(_)||(u[_]={rect:w,metrics:S,page:l._currentPage}),l._dirties[l._currentPage]=!0}}}return u})},e.prototype.removeGlyphs=function(e){for(var t in this._glyphIndex){var i=this._glyphIndex[t];if(i){var r=void 0;for(var n in i)if((r=i[n]).tileIDs.delete(e),0===r.tileIDs.size){for(var a=this._glyphData[r.page],o=r.rect,s=void 0,l=void 0,u=0;u<o.height;u++)for(s=this.width*(o.y+u)+o.x,l=0;l<o.width;l++)a[s+l]=0;delete i[n],this._dirties[r.page]=!0}}}},e.prototype.bind=function(e,t,i,r){void 0===r&&(r=0),this._textures[i]||(this._textures[i]=new o(e,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));var n=this._textures[i];n.setSamplingMode(t),this._dirties[i]&&n.setData(this._glyphData[i]),e.bindTexture(n,r),this._dirties[i]=!1},e.prototype.dispose=function(){this._binPack=null;for(var e=0,t=this._textures;e<t.length;e++){var i=t[e];i&&i.dispose()}this._textures.length=0},e}()}.apply(null,r))||(e.exports=n)},2115:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(27),i(455),i(6)],void 0===(n=function(e,t,i,r,n){var a=function(){function e(e){if(this._metrics=[],this._bitmaps=[],e)for(;e.next();)switch(e.tag()){case 1:for(var t=e.getMessage();t.next();)switch(t.tag()){case 3:for(var i=t.getMessage(),r=void 0,n=void 0,a=void 0,o=void 0,s=void 0,l=void 0,u=void 0;i.next();)switch(i.tag()){case 1:r=i.getUInt32();break;case 2:n=i.getBytes();break;case 3:a=i.getUInt32();break;case 4:o=i.getUInt32();break;case 5:s=i.getSInt32();break;case 6:l=i.getSInt32();break;case 7:u=i.getUInt32();break;default:i.skip()}r&&(this._metrics[r]={width:a,height:o,left:s,top:l,advance:u},this._bitmaps[r]=n);break;default:t.skip()}break;default:e.skip()}}return e.prototype.getMetrics=function(e){return this._metrics[e]},e.prototype.getBitmap=function(e){return this._bitmaps[e]},e}(),o=function(){function e(){this._ranges=[]}return e.prototype.getRange=function(e){return this._ranges[e]},e.prototype.addRange=function(e,t){this._ranges[e]=t},e}();return function(){function e(e){this._glyphInfo={},this._baseURL=e}return e.prototype.getRange=function(e,t){var o=this._getFontStack(e);if(o.getRange(t))return n.resolve();var s=256*t,l=s+255,u=this._baseURL.replace("{fontstack}",e).replace("{range}",s+"-"+l);return i(u,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(e){o.addRange(t,new a(new r(new Uint8Array(e.data),new DataView(e.data))))}).catch(function(){o.addRange(t,new a)})},e.prototype.getGlyph=function(e,t){var i=this._getFontStack(e);if(i){var r=Math.floor(t/256);if(!(r>256)){var n=i.getRange(r);if(n)return{metrics:n.getMetrics(t),bitmap:n.getBitmap(t)}}}},e.prototype._getFontStack=function(e){var t=this._glyphInfo[e];return t||(t=this._glyphInfo[e]=new o),t},e}()}.apply(null,r))||(e.exports=n)},2116:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(203),i(1706),i(1776),i(1280)],void 0===(n=function(e,t,i,r,n,a){return function(){function e(e,t,i){void 0===i&&(i=0),this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,(e<=0||t<=0)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=e,this._pageHeight=t,i>0&&(this._maxItemSize=i),this._binPack=new n(e-4,t-4)}return e.prototype.getWidth=function(e){return e>=this._size.length?-1:this._size[e][0]},e.prototype.getHeight=function(e){return e>=this._size.length?-1:this._size[e][1]},e.prototype.setSpriteSource=function(e){if(this.dispose(),this.pixelRatio=e.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new n(this._pageWidth-4,this._pageHeight-4);var t=Math.floor(this._pageWidth),i=Math.floor(this._pageHeight),r=new Uint32Array(t*i);this._mosaicsData[0]=r,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=e},e.prototype.getSpriteItem=function(e,t){void 0===t&&(t=!1);var i=this._mosaicRects[e];if(i)return i;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;var r=this._sprites.getSpriteInfo(e);if(!r||!r.width||!r.height||r.width<0||r.height<0)return null;var n=r.width,a=r.height,o=this._allocateImage(n,a),s=o[0],l=o[1],u=o[2];return s.width<=0?null:(this._copy(s,r,l,u,t),i={rect:s,width:n,height:a,anchorX:0,anchorY:0,sdf:r.sdf,pixelRatio:r.pixelRatio,page:l},this._mosaicRects[e]=i,i)},e.prototype.preloadSpriteItems=function(){for(var e=0,t=this._sprites.spriteNames;e<t.length;e++){var i=t[e];this.getSpriteItem(i,!0)}},e.prototype.getSpriteItems=function(e){for(var t={},i=0,r=e;i<r.length;i++){var n=r[i];t[n]=this.getSpriteItem(n)}return t},e.prototype.getMosaicItemPosition=function(e,t){var i=this.getSpriteItem(e,t),r=i&&i.rect;if(!r)return null;r.width=i.width,r.height=i.height;var n=i.width,a=i.height;return{size:[i.width,i.height],tl:[(r.x+2)/this._size[i.page][0],(r.y+2)/this._size[i.page][1]],br:[(r.x+2+n)/this._size[i.page][0],(r.y+2+a)/this._size[i.page][1]],page:i.page}},e.prototype.bind=function(e,t,i,r){void 0===i&&(i=0),void 0===r&&(r=0),this._textures[i]||(this._textures[i]=new a(e,{pixelFormat:6408,dataType:5121,width:this._size[i][0],height:this._size[i][1]},new Uint8Array(this._mosaicsData[i].buffer)));var n=this._textures[i];n.setSamplingMode(t),this._dirties[i]&&n.setData(new Uint8Array(this._mosaicsData[i].buffer)),e.bindTexture(n,r),this._dirties[i]=!1},e._copyBits=function(e,t,i,r,n,a,o,s,l,u,h){var f=r*t+i,d=s*a+o;if(h){d-=a;for(var c=-1;c<=u;f=((++c+u)%u+r)*t+i,d+=a)for(var p=-1;p<=l;p++)n[d+p]=e[f+(p+l)%l]}else for(c=0;c<u;c++){for(p=0;p<l;p++)n[d+p]=e[f+p];f+=t,d+=a}},e.prototype._copy=function(t,i,r,n,a,o){if(this._sprites&&"loaded"===this._sprites.loadStatus&&!(r>=this._mosaicsData.length)){var s=new Uint32Array(o?o.buffer:this._sprites.image.buffer),l=this._mosaicsData[r];l&&s||console.error("Source or target images are uninitialized!");var u=o?i.width:this._sprites.width;e._copyBits(s,u,i.x,i.y,l,n[0],t.x+2,t.y+2,i.width,i.height,a),this._dirties[r]=!0}},e.prototype._allocateImage=function(e,t){e+=2,t+=2;var a=Math.max(e,t);if(this._maxItemSize&&this._maxItemSize<a){var o=Math.pow(2,Math.ceil(i.log2(e))),s=Math.pow(2,Math.ceil(i.log2(t))),l=new r(0,0,e,t);return this._mosaicsData.push(new Uint32Array(o*s)),this._dirties.push(!0),this._size.push([o,s]),this._textures.push(void 0),[l,this._mosaicsData.length-1,[o,s]]}var u=e%4?4-e%4:4,h=t%4?4-t%4:4;1===u&&(u=5),1===h&&(h=5);var f=this._binPack.allocate(e+u,t+h);return f.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new n(this._pageWidth-4,this._pageHeight-4),this._allocateImage(e,t)):[f,this._currentPage,[this._pageWidth,this._pageHeight]]},e.prototype.dispose=function(){this._binPack=null,this._mosaicRects={};for(var e=0,t=this._textures;e<t.length;e++){var i=t[e];i&&i.dispose()}this._textures.length=0},e}()}.apply(null,r))||(e.exports=n)},2117:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(10),i(0),i(23),i(67),i(27),i(6),i(19)],void 0===(n=function(e,t,i,r,n,a,o,s,l){return function(){function e(e,t){this.baseURL=e,this.devicePixelRatio=t,this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded"}return Object.defineProperty(e.prototype,"spriteNames",{get:function(){var e=[];for(var t in this._spritesData)e.push(t);return e.sort(),e},enumerable:!0,configurable:!0}),e.prototype.getSpriteInfo=function(e){return this._spritesData[e]},e.prototype.load=function(){var e=this;return this.loadStatus="loading",this.baseURL?this._loadSprites().then(function(){return e.loadStatus="loaded",e}).catch(function(t){return e.loadStatus="failed",e}):s.resolve(this)},e.prototype._loadSprites=function(){var e=this;this._isRetina=this.devicePixelRatio>1.15;var t=this.baseURL,i=this._isRetina?"@2x":"";return o(t+i+".json",{callbackParamName:"callback",responseType:"json"}).then(function(r){var o=Object.keys(r.data);if(!o||0===o.length||1===o.length&&"_ssl"===o[0])return s.resolve(null);e._spritesData=r.data;var u=new n,h=new Image;h.crossOrigin="anonymous",h.onload=function(){h.onload=null,e.width=h.width,e.height=h.height;var t=document.createElement("canvas");t.width=h.width,t.height=h.height;var i=t.getContext("2d");i.drawImage(h,0,0,h.width,h.height);for(var r,n=i.getImageData(0,0,h.width,h.height),a=new Uint8Array(n.data),o=0;o<a.length;o+=4)r=a[o+3]/255,a[o]=a[o]*r,a[o+1]=a[o+1]*r,a[o+2]=a[o+2]*r;e.image=a,u.resolve()};var f=""+t+i+".png";if(a.id){var d=a.id.findCredential(f);d&&d.token&&(f+="?token="+d.token)}return h.src=l.addProxy(f),u})},e}()}.apply(null,r))||(e.exports=n)},2118:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(6),i(231),i(149)],void 0===(n=function(e,t,i,r,n){return function(){function e(e){if(e instanceof r)this._tilemapCache=e;else{if(!(e&&"index"in e))throw new Error("Invalid tilemap!");this._tilemap=e.index}}return e.prototype.dataKey=function(e){if(this._tilemapCache){var t=e.level,i=e.row,r=e.col,a=new n(e);return this._tilemapCache.fetchAvailabilityUpsample(t,i,r,a).then(function(){return a}).catch(function(e){if(e&&"cancel"===e.dojoType)throw e;return a.level=t,a.row=i,a.col=r,a})}return this._getIndexedDataKey(e)},e.prototype.forEach=function(e,t,i,r,n){this._callback=n,this._maxLevel=t+e,this._forEach(this._tilemap,t,i,r)},e.prototype._forEach=function(e,t,i,r){0!==e&&(this._callback(t,i,r),t!==this._maxLevel&&"object"==typeof e&&(this._forEach(e[0],t+1,2*i,2*r),this._forEach(e[1],t+1,2*i,2*r+1),this._forEach(e[2],t+1,2*i+1,2*r),this._forEach(e[3],t+1,2*i+1,2*r+1)))},e.prototype._getIndexedDataKey=function(e){var t=[e];if(e.level<0||e.row<0||e.col<0||e.row>>e.level>0||e.col>>e.level>0)return i.resolve(null);for(var r=e;0!==r.level;)r=new n(r.level-1,r.row>>1,r.col>>1,r.world),t.push(r);var a,o,s=this._tilemap,l=t.pop();if(1===s)return i.resolve(l);for(;t.length;)if(o=(1&(a=t.pop()).col)+((1&a.row)<<1),s){if(0===s[o]){l=null;break}if(1===s[o]){l=a;break}l=a,s=s[o]}return i.resolve(l)},e}()}.apply(null,r))||(e.exports=n)},2119:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(10),i(0)],void 0===(n=function(e,t,i,r){Object.defineProperty(t,"__esModule",{value:!0});var n=function(){return function(e){this.type=e}}();t.RenderBucket=n;var a=function(e){function t(){var t=e.call(this,2)||this;return t.triangleElementStart=0,t.triangleElementCount=0,t}return i(t,e),t.prototype.hasData=function(){return this.triangleElementCount>0},t}(n);t.LineRenderBucket=a;var o=function(e){function t(){var t=e.call(this,1)||this;return t.triangleElementStart=0,t.triangleElementCount=0,t.outlineElementStart=0,t.outlineElementCount=0,t}return i(t,e),t.prototype.hasData=function(){return this.triangleElementCount>0||this.outlineElementCount>0},t}(n);t.FillRenderBucket=o;var s=function(e){function t(){var t=e.call(this,3)||this;return t.markerPerPageElementsMap=new Map,t.glyphPerPageElementsMap=new Map,t.isSDF=!1,t}return i(t,e),t.prototype.hasData=function(){return this.markerPerPageElementsMap.size>0||this.glyphPerPageElementsMap.size>0},t}(n);t.SymbolRenderBucket=s;var l=function(e){function t(){var t=e.call(this,4)||this;return t.triangleElementStart=0,t.triangleElementCount=0,t}return i(t,e),t.prototype.hasData=function(){return this.triangleElementCount>0},t}(n);t.CircleRenderBucket=l;var u=function(e){function t(){return e.call(this,0)||this}return i(t,e),t.prototype.hasData=function(){return!0},t}(n);t.BackgroundRenderBucket=u}.apply(null,r))||(e.exports=n)},2121:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(111)],void 0===(n=function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t,i,r){this.fadeSpeed=e,this.minfadeLevel=t,this.maxfadeLevel=i,this.fadeChange=r}}();t.FadeProperties=r;var n=function(){function e(e){void 0===e&&(e=300),this._levelSnapshots=[],this._duration=e}return e.prototype.recordLevel=function(e){var t=i(),r=this._levelSnapshots;0===r.length&&(r.push({level:e,now:0}),r.push({level:e,now:0})),2!==r.length&&r[0].level===e||r.push({level:e,now:t})},e.prototype.needsRedraw=function(){if(0===this._levelSnapshots.length)return!1;for(var e=this._duration,t=this._levelSnapshots,i=t.length,r=t[i-1],n=-1;i>n+1&&t[n+1].now+e<r.now;)n++;for(n<0&&(n=0);n<i;n++)if(t[n].level!==r.level)return!0;return!1},e.prototype.getFadeValues=function(e){void 0===e&&(e=!1);for(var t=this._duration,r=i(),n=this._levelSnapshots;n.length>3&&n[1].now+t<r;)n.shift();n[1].now+t<r&&(n[0].level=n[1].level);var a=n[0].level,o=n[n.length-1],s=o.level,l=Math.min(a,s),u=Math.max(a,s),h=(o.level-n[1].level)/((o.now-n[1].now)/t),f=(r-o.now)/t*h;return e?{fadeSpeed:0,minfadeLevel:l,maxfadeLevel:u,fadeChange:0}:{fadeSpeed:h,minfadeLevel:l,maxfadeLevel:u,fadeChange:f}},e}();t.FadeRecorder=n}.apply(null,r))||(e.exports=n)},2122:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1779),i(1488),i(1627),i(1540),i(1528),i(1287),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u){return function(){function e(){this._solidAttributeLocations={a_pos:0},this._attributeLocations={a_pos:0,a_id:1},this._patternMatrix=i.create(),this._color=r.create(),this._solidrendererInitialized=!1,this._rendererInitialized=!1,this._color.set([1,0,0,1])}return e.prototype.dispose=function(){this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null),this._vertexArrayObject&&(this._vertexArrayObject.dispose(),this._vertexArrayObject=null)},e.prototype.renderSolidColor=function(e,t){this._solidrendererInitialized||this._initializeSolidRenderer(e),e.bindVAO(this._solidVertexArrayObject);var i=this._shaderVariations.getProgram([!1,!1],void 0,void 0,this._solidAttributeLocations);e.bindProgram(i),i.setUniformMatrix4fv("u_transformMatrix",t.u_matrix),i.setUniform2fv("u_normalized_origin",t.u_normalized_origin),i.setUniform1f("u_coord_range",t.u_coord_range||4096),i.setUniform1f("u_depth",t.u_depth||0),i.setUniform4fv("u_color",t.u_color||this._color),e.drawArrays(5,0,4),e.bindVAO()},e.prototype.render=function(e,t,r,n,o,s,l,u,h){this._rendererInitialized||this._initialize(e);var f=s.getPaintValue("background-color",r),d=h*s.getPaintValue("background-opacity",r),c=s.getPaintValue("background-pattern",r),p=void 0!==c,_=f[3]*d,m=p||_<1;if((!m||0!==n)&&(m||1!==n)){var v=3===n,x=this._shaderVariations.getProgram([p,v],void 0,void 0,this._attributeLocations);if(e.bindVAO(this._vertexArrayObject),e.bindProgram(x),x.setUniform1f("u_coord_range",o.coordRange),x.setUniform1f("u_depth",s.z||0),x.setUniformMatrix4fv("u_transformMatrix",o.tileTransform.transform),x.setUniform2fv("u_normalized_origin",o.tileTransform.displayCoord),p){var g=l.getMosaicItemPosition(c,!0);if(!g)return;var D=512*Math.pow(2,Math.floor(r)-o.key.level)*u;i.identity(this._patternMatrix);var y=D/g.size[0],b=D/g.size[1];this._patternMatrix[0]=y,this._patternMatrix[4]=b,l.bind(e,9729,0),x.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix),x.setUniform1f("u_opacity",d),x.setUniform2f("u_pattern_tl",g.tl[0],g.tl[1]),x.setUniform2f("u_pattern_br",g.br[0],g.br[1]),x.setUniform1i("u_texture",0)}else this._color[0]=_*f[0],this._color[1]=_*f[1],this._color[2]=_*f[2],this._color[3]=_,x.setUniform4fv("u_color",this._color);if(v){var M=a.int32To4Bytes(t.layerID);x.setUniform4f("u_id",M[0],M[1],M[2],M[3])}e.drawArrays(5,0,4),e.bindVAO()}},e.prototype._initializeSolidRenderer=function(e){if(this._solidrendererInitialized)return!0;if(!this._shaderVariations){var t=new l("background",["backgroundVS","backgroundFS"],[],o,e);t.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN"),t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t}var i=new Int8Array([0,0,1,0,0,1,1,1]),r=s.createVertex(e,35044,i),n=new u(e,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},{geometry:r});return this._solidVertexArrayObject=n,this._solidrendererInitialized=!0,!0},e.prototype._initialize=function(e){if(this._rendererInitialized)return!0;if(!this._shaderVariations){var t=new l("background",["backgroundVS","backgroundFS"],[],o,e);t.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN"),t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t}var i=[];i.push(n.i1616to32(0,0)),i.push(n.i1616to32(1,0)),i.push(n.i1616to32(0,1)),i.push(n.i1616to32(1,1));var r=new Uint32Array(i),a=s.createVertex(e,35044,r),h=new u(e,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:a});return this._vertexArrayObject=h,this._rendererInitialized=!0,!0},e}()}.apply(null,r))||(e.exports=n)},2123:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new <snippet name="myShaderVS">\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n<snippets>\n\n  <snippet name="rgba2float"><![CDATA[\n    // TODO consider moving this snippet into a util.xml file\n    const vec4 rgba2float_factors = vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n    float rgba2float(vec4 rgba) {\n      // Convert components from 0->1 back to 0->255 and then\n      // add the components together with their corresponding\n      // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n      return dot(rgba, rgba2float_factors);\n    }\n  ]]></snippet>\n\n  <snippet name="iconVS">\n    <![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_vertexOffset;\n      attribute vec4 a_tex;\n      attribute vec4 a_levelInfo;\n\n    #ifdef DD\n      attribute vec4 a_color;\n      attribute mediump float a_size;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      uniform mediump float u_size;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the size of the mosaic given in pixels\n      uniform vec2 u_mosaicSize;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the map\'s rotation from the north\n      uniform mediump float u_mapRotation;\n      uniform mediump float u_level;\n\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\n      uniform lowp float u_keepUpright;\n\n      // the rate of the change in the opacity (fade) of the icons\n      uniform mediump float u_fadeSpeed;\n\n      // the low level we transition (to/from)\n      uniform mediump float u_minfadeLevel;\n\n      // the high level we transition (to/from)\n      uniform mediump float u_maxfadeLevel;\n\n      // the amount of fade given teh current time past the last recorded level\n      uniform mediump float u_fadeChange;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_opacity;\n\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\n      varying mediump vec2 v_tex;\n\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      varying mediump vec2 v_size;\n\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\n      // by 8 and then at the shader devide by the same number\n      const float C_OFFSET_PRECISION = 1.0 / 8.0;\n\n      const float C_256_TO_RAD = 3.14159265359 / 128.0;\n      const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\n      const float tileCoordRatio = 1.0 / 8.0;\n\n      void main()\n      {\n        mediump float a_labelMinLevel = a_levelInfo[0];\n        mediump float a_angle         = a_levelInfo[1];\n        mediump float a_minLevel      = a_levelInfo[2];\n        mediump float a_maxLevel      = a_levelInfo[3];\n\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\n        mediump float delta_z = 0.0;\n\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\n        mediump float rotated = mod(a_angle + u_mapRotation, 256.0);\n        delta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z += (flip > 0) && (64 <= rotated) && (rotated < 192)\n\n        // u_level is the current service level adjusted for the change in font size\n        delta_z += 1.0 - step(a_minLevel, u_level); // Test if (level < minLevel)\n        delta_z += step(a_maxLevel, u_level); // Test if (maxLevel <= level)\n\n        // calculate the alpha given the change in the fade and the fade-speed\n        lowp float alpha = clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\n\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\n        v_transparency = (u_fadeSpeed >= 0.0 ? alpha : 1.0 - alpha);\n\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\n        if (u_maxfadeLevel < a_labelMinLevel)\n        {\n          v_transparency = 0.0;\n        }\n        if (u_minfadeLevel >= a_labelMinLevel)\n        {\n          v_transparency = 1.0;\n        }\n\n        // if label had been faded out, clip it\n        delta_z += step(v_transparency, 0.0);\n\n        vec2 offset = C_OFFSET_PRECISION * a_vertexOffset;\n\n        v_size = abs(offset);\n\n      #ifdef SDF\n        offset = (120.0 / 86.0) * offset;\n      #endif // SDF\n\n      #ifdef DD\n        mediump float icon_size = a_size * u_size;\n      #else\n        mediump float icon_size = u_size;\n      #endif // DD\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * icon_size * vec4(offset, delta_z, 0.0);\n\n      #ifdef DD\n        v_color = a_color * u_color;\n      #else\n        v_color = u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id = u_id / 255.0;\n      #endif // ID\n\n        v_tex = a_tex.xy / u_mosaicSize;\n        v_transparency *= v_color.w;\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="iconFS">\n    <![CDATA[\n      precision mediump float;\n\n      uniform lowp sampler2D u_texture; // SDF texture\n    #ifdef SDF\n      uniform lowp vec4 u_color; // a color to override the one of the vertex\n      uniform lowp vec4 u_outlineColor;\n      uniform mediump float u_outlineSize;\n    #endif // SDF\n\n      varying mediump vec2 v_tex;\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      varying mediump vec2 v_size;\n\n      varying lowp vec4 v_color;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // we need the conversion function from RGBA to float\n      $rgba2float\n\n      vec4 mixColors(vec4 color1, vec4 color2) {\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\n        float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\n        vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\n\n        return vec4(compositeColor, compositeAlpha);\n      }\n\n      void main()\n      {\n      #ifdef SDF\n        lowp vec4 fillPixelColor = v_color;\n\n        // calculate the distance from the edge [-0.5, 0.5]\n        float d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;\n\n        // the soft edge ratio is about 1.5 pixels allocated for the soft edge.\n        // 1 / 86 represents a single pixel given the size of the SDF is 128 and we add 4 pixels margins to deal with\n        // other non SDF types.\n        // The rasterized geometry takes only 86 pixels because of the extra 16 pixels margin for the outline.\n        const float sofetEdgeRatio = 0.248062016; // ==> (32.0 / 86.0) / 1.5;\n        float size = max(v_size.x, v_size.y);\n        float dist = d * sofetEdgeRatio * size;\n\n        // set the fragment\'s transparency according to the distance from the edge\n        fillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\n\n        // count for the outline\n        // therefore tint the entire icon area.\n        if (u_outlineSize > 0.25) {\n          lowp vec4 outlinePixelColor = u_outlineColor;\n          // the outline limit ratio is derived from the 16 pixels allocated for the outline and the fact that 1/86 represents\n          // a single pixel.\n          const float outlineLimitRatio = (16.0 / 86.0);\n          float clampedOutlineSize = sofetEdgeRatio * min(u_outlineSize, outlineLimitRatio * max(v_size.x, v_size.y));\n\n          outlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\n\n          // finally combine the outline and the fill colors\n          gl_FragColor = v_transparency * mixColors(fillPixelColor, outlinePixelColor);\n        }\n        else {\n          gl_FragColor = v_transparency * fillPixelColor;\n        }\n      #else // not an SDF\n        lowp vec4 texColor = texture2D(u_texture, v_tex);\n        gl_FragColor = v_transparency * texColor;\n      #endif // SDF\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n\n</snippets>\n\n'},2124:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n<snippets>\n  <snippet name="backgroundVS">\n    <![CDATA[\n    precision mediump float;\n\n    attribute vec2 a_pos;\n\n  #ifdef ID\n    uniform mediump vec4 u_id;\n    varying mediump vec4 v_id;\n  #endif // ID\n\n    uniform highp mat4 u_transformMatrix;\n    uniform mediump vec2 u_normalized_origin;\n    uniform mediump float u_coord_range;\n    uniform mediump float u_depth;\n\n  #ifdef PATTERN\n    uniform mediump mat3 u_pattern_matrix; // can we use medium precision?\n    varying mediump vec2 v_tileTextureCoord;\n  #endif // PATTERN\n\n    void main() {\n      gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(u_coord_range * a_pos, 0.0, 1.0);\n\n  #ifdef PATTERN\n      // calculate the texture coordinates of the current vertex. It will of course get interpolated.\n      // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\n      v_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\n  #endif // PATTERN\n\n  #ifdef ID\n      v_id = u_id / 255.0;\n  #endif // ID\n    }\n    ]]>\n  </snippet>\n\n  <snippet name="backgroundFS">\n    <![CDATA[\n  #ifdef PATTERN\n    uniform lowp float u_opacity;\n    uniform mediump vec2 u_pattern_tl;\n    uniform mediump vec2 u_pattern_br;\n    uniform sampler2D u_texture;\n\n    varying mediump vec2 v_tileTextureCoord;\n  #else\n    uniform lowp vec4 u_color;\n  #endif // PATTERN\n\n  #ifdef ID\n    varying mediump vec4 v_id;\n  #endif // ID\n\n    void main() {\n  #ifdef PATTERN\n      // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\n      mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\n\n      // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\n      // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\n      // we need to only sample from area that has our sprite in the mosaic.\n      mediump vec2 samplePos = mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\n\n      // sample the sprite mosaic\n      lowp vec4 color = texture2D(u_texture, samplePos);\n      gl_FragColor = u_opacity * color;\n  #else\n      gl_FragColor = u_color;\n  #endif // PATTERN\n\n  #ifdef ID\n      if (gl_FragColor.a < 1.0 / 255.0) {\n        discard;\n      }\n      gl_FragColor = v_id;\n  #endif // ID\n    }\n    ]]>\n  </snippet>\n</snippets>\n'},2125:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new <snippet name="myShaderVS">\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n<snippets>\n\n  <snippet name="circleVS">\n    <![CDATA[\n      precision mediump float;\n\n      attribute vec2 a_pos;\n      attribute vec4 a_color;\n      attribute vec4 a_stroke_color;\n      attribute vec4 a_data;\n\n      const float sizePrecision = 0.25; // 1/4\n      const float blurPrecision = 0.03125; // 1/32\n\n      varying lowp vec4 v_color;\n      varying lowp vec4 v_stroke_color;\n      varying mediump float v_blur;\n      varying mediump float v_stroke_width;\n      varying mediump float v_radius;\n      varying mediump vec2 v_offset;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_radius;\n      uniform lowp vec4 u_color;\n      uniform mediump float u_blur;\n      uniform mediump float u_stroke_width;\n      uniform lowp vec4 u_stroke_color;\n\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\n\n      void main()\n      {\n        v_color = a_color * u_color;\n        v_stroke_color = a_stroke_color * u_stroke_color;\n        v_stroke_width = a_data[1] * sizePrecision * u_stroke_width;\n        v_radius = a_data[2] * u_radius;\n        v_blur = max(a_data[0] * blurPrecision + u_blur, u_antialiasingWidth / (v_radius + v_stroke_width));\n\n        mediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\n        v_offset = offset;\n\n      #ifdef ID\n        v_id = u_id / 255.0;\n      #endif // ID\n\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos * 0.5, 0.0, 1.0) + u_extrudeMatrix * (v_radius + v_stroke_width) * vec4(offset, 0.0, 0.0);\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="circleFS">\n    <![CDATA[\n      precision lowp float;\n\n      varying lowp vec4 v_color;\n      varying lowp vec4 v_stroke_color;\n      varying mediump float v_blur;\n      varying mediump float v_stroke_width;\n      varying mediump float v_radius;\n      varying mediump vec2 v_offset;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        mediump float dist = length(v_offset);\n\n        mediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);\n\n        lowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\n\n        gl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n\n</snippets>\n\n'},2126:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n<snippets>\n  <snippet name="fillVS">\n    <![CDATA[\n      precision mediump float;\n\n      attribute vec2 a_pos;\n\n      uniform highp mat4 u_transformMatrix;\n      uniform highp vec2 u_normalized_origin;\n      uniform mediump float u_depth;\n\n    #ifdef PATTERN\n      uniform mediump mat3 u_pattern_matrix;\n      varying mediump vec2 v_tileTextureCoord;\n    #endif // PATTERN\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      varying lowp vec4 v_color;\n\n      void main()\n      {\n      #ifdef DD\n        v_color = a_color * u_color;\n      #else\n        v_color = u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id = u_id / 255.0;\n      #endif // ID\n\n      #ifdef PATTERN\n        // calculate the texture coordinates of the current vertex. It will of course get interpolated.\n        // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\n        // (-4k to 8k -1) to texture coordinates.\n        v_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\n      #endif // PATTERN\n\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0, 1.0);\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="fillFS">\n    <![CDATA[\n      precision lowp float;\n\n    #ifdef PATTERN\n      uniform mediump vec2 u_pattern_tl;\n      uniform mediump vec2 u_pattern_br;\n      uniform lowp sampler2D u_texture;\n      varying mediump vec2 v_tileTextureCoord;\n    #endif // PATTERN\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n\n      vec4 mixColors(vec4 color1, vec4 color2) {\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\n        float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\n        vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\n\n        return vec4(compositeColor, compositeAlpha);\n      }\n      void main()\n      {\n      #ifdef PATTERN\n        // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\n        mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\n\n        // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\n        // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\n        // we need to only sample from area that has our sprite in the mosaic.\n        mediump vec2 samplePos = mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\n\n        // sample the sprite mosaic\n        lowp vec4 color = texture2D(u_texture, samplePos);\n        gl_FragColor = v_color[3] * color;\n      #else\n        gl_FragColor = v_color;\n      #endif // PATTERN\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n</snippets>\n'},2127:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n<snippets>\n  <snippet name="lineVS">\n    <![CDATA[\n      /* The implementation of the renderer is based on the article and implementation of MB described here:\n      * https://www.mapbox.com/blog/drawing-antialiased-lines/\n      */\n\n      attribute vec2 a_pos;\n      attribute vec4 a_offsetAndNormal;\n      attribute vec2 a_accumulatedDistance;\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      uniform mediump float u_blur;\n      uniform mediump float u_antialiasing; // the feather distance at which the line edge fades out\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the interpolated normal to the line. the information is packed into the two LSBs of the vertex coordinate\n      varying mediump vec2 v_normal;\n\n      // the accumulated distance along the line. We need this information in order to render the dashes.\n      varying highp float v_accumulatedDistance;\n\n      const float scale = 1.0 / 31.0;\n\n    #ifdef DD\n      attribute vec4 a_color;\n      attribute mediump float a_width;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      uniform mediump float u_width;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n      varying mediump float v_lineHalfWidth; // the inset and outset of the line\n      varying mediump float v_blur;\n\n    #ifndef PATTERN\n      uniform mediump vec2 u_dasharray;\n      varying mediump vec2 v_dasharray;\n    #endif\n\n      void main()\n      {\n        v_normal = a_offsetAndNormal.zw * scale;\n\n      #ifdef DD\n        v_lineHalfWidth = a_width * u_width;\n      #else\n        v_lineHalfWidth = u_width;\n      #endif // DD\n\n        v_lineHalfWidth += u_antialiasing;\n        v_lineHalfWidth *= 0.5;\n\n      #ifndef PATTERN\n      #ifdef DD\n        v_dasharray = u_dasharray * a_width;\n      #else\n        v_dasharray = u_dasharray * u_width;\n      #endif // DD\n      #endif\n\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\n        mediump vec2 dist = v_lineHalfWidth * a_offsetAndNormal.xy * scale;\n\n        // transform the vertex\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * vec4(dist, 0.0, 0.0);\n\n        // the accumulated distance will be used to calculate the dashes (or the no-data...)\n        v_accumulatedDistance = a_accumulatedDistance.x;\n\n        v_blur = u_blur + u_antialiasing;\n\n        #ifdef DD\n          v_color = a_color * u_color;\n        #else\n          v_color = u_color;\n        #endif // DD\n\n        #ifdef ID\n          v_id = u_id / 255.0;\n        #endif // ID\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="lineFS">\n    <![CDATA[\n      varying mediump vec2 v_normal;\n      varying highp float v_accumulatedDistance;\n\n      varying mediump float v_lineHalfWidth;\n      varying lowp vec4 v_color;\n\n      varying mediump float v_blur;\n\n    #ifdef PATTERN\n      uniform mediump vec2 u_pattern_tl;\n      uniform mediump vec2 u_pattern_br;\n      uniform mediump vec2 u_spriteSize;\n      uniform sampler2D u_texture;\n\n      // Horizontal scale is used to scale the horizontal texture coordinate v_normal.x before adding it as an offset to the\n      // accumulated distance. Most vertices will have v_normal.x == 0, because the pattern must be sampled only depending on\n      // the v_accumulatedDistance value. But tessellation at caps can have vertices with v_normal.x != 0, thus allowing to\n      // "keep moving" for a few more pixel even when the line has ended or has not started yet.\n      const mediump float tileCoordRatio = 8.0;\n    #else\n      varying mediump vec2 v_dasharray;\n    #endif\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        // dist represent the distance of the fragment from the line. 1.0 or -1.0 will be the values on the edge of the line,\n        // and any value in between will be inside the line (the sign represent the direction - right or left).\n        // since u_linewidth.s (half line width) is represented in pixels, dist is also given in pixels\n        mediump float fragDist = length(v_normal) * v_lineHalfWidth;\n\n        // calculate the alpha given the difference between the line-width and the distance of the fragment from the center-line.\n        // We need to count for both sides of the line.\n        lowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);\n\n      #ifdef PATTERN\n        // we need to calculate the relative portion of the line texture along the line given the accumulated distance aliong the line\n        // The computed value should is anumber btween 0 and 1 which will later be used to interpolate btween the BR and TL values\n        mediump float relativeTexX = mod((v_accumulatedDistance + v_normal.x * v_lineHalfWidth * tileCoordRatio) / u_spriteSize.x, 1.0);\n\n        // in order to calculate the texture coordinates perpendicular to the line (Y axis), we use the interpolated normal values\n        // which range from -1.0 to 1.0. On the line\'s centerline, the value of the interpolated normal is 0.0, however the relative\n        // texture value should be 0.5 (given that at the bottom of the line, the texture coordinate must be equal to 0.0)\n        // (TL) ---------------------------      --\x3e left edge of line. Interpolated normal is 1.0\n        //              | -> line-width / 2\n        //      - - - - - - - - - - - - - -\n        //              | -> line-width / 2\n        //      ---------------------------- (BR)--\x3e right edge of line. Interpolated normal is -1.0\n\n        mediump float relativeTexY = 0.5 + (v_normal.y * v_lineHalfWidth / u_spriteSize.y);\n\n        // claculate the actual texture coordinates by interpolating between the TL/BR pattern coordinates\n        mediump vec2 texCoord = mix(u_pattern_tl, u_pattern_br, vec2(relativeTexX, relativeTexY));\n\n        // get the color from the texture\n        lowp vec4 color = texture2D(u_texture, texCoord);\n\n        // finally write the fragment value\n        gl_FragColor = alpha * v_color[3] * color;\n      #else\n        // now calculate the dashes given the accumulated distance of the line:\n        // start with calculating a normalized position along the line\n        lowp float dashPos =  mod(v_accumulatedDistance, v_dasharray.x + v_dasharray.y);\n\n        // calculate the contribution to the alpha of the dash part. It is provided by the shortest portion of the position along the dash.\n        // we must clamp since the value might be bigger than 1 or smaller than zero (when over a dash).\n        //   | <--- pos along the dash part\n        // -------_______-------_______\n        // when the dashPos is over the \'gap\' part of the dash dasharray.x - dashPos is negative and therefore the alpha will\n        // get clamped to zero.\n        // when dasharray.x - dashPos is positive, or when dashPos is smaller than 1.0, it gives us a soft edge to each dash part.\n        // along the direction of the line.\n        lowp float dashAlpha = clamp(min(dashPos, v_dasharray.x - dashPos) + 0.5, 0.0, 1.0);\n\n        // if we don\'t have a no-data part to the dash then it is a solid line\n        dashAlpha = max(sign(-v_dasharray.y), dashAlpha);\n        // finally multiply the fragment\'s alpha by the calculated dash-alpha\n        alpha *= dashAlpha;\n\n        // output the fragment color\n        gl_FragColor = alpha * v_color;\n      #endif // PATTERN\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n</snippets>\n'},2128:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n<snippets>\n  <snippet name="outlineVS">\n    <![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_offset;\n      attribute vec2 a_xnormal;\n\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      varying lowp vec4 v_color;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      uniform highp mat4 u_transformMatrix;\n      uniform highp mat4 u_extrudeMatrix;\n      uniform highp vec2 u_normalized_origin;\n      uniform mediump float u_depth;\n      uniform mediump float u_outline_width;\n\n      varying lowp vec2 v_normal;\n\n      const float scale = 1.0 / 15.0;\n\n      void main()\n      {\n      #ifdef DD\n        v_color = a_color * u_color;\n      #else\n        v_color = u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id = u_id / 255.0;\n      #endif // ID\n\n        v_normal = a_xnormal;\n\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\n        mediump vec4 dist = vec4(u_outline_width * a_offset * scale, 0.0, 0.0);\n\n        // Remove the texture normal bit of the position before scaling it with the\n        // model/view matrix. Add the extrusion vector *after* the model/view matrix\n        // because we\'re extruding the line in pixel space, regardless of the current\n        // tile\'s zoom level.\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * dist;\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="outlineFS">\n    <![CDATA[\n      varying lowp vec4 v_color;\n      varying mediump vec2 v_normal;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        // Calculate the distance of the pixel from the line in pixels.\n        lowp float dist = abs(v_normal.y);\n\n        lowp float alpha = smoothstep(1.0, 0.0, dist);\n        gl_FragColor = alpha * v_color;\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n</snippets>\n'},2129:function(e,t){e.exports='<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new <snippet name="myShaderVS">\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n<snippets>\n\n  <snippet name="rgba2float"><![CDATA[\n    // TODO this snippet should only be in views/3d/webgl-engine/materials/internal/Util.xml\n\n    // Factors to convert rgba back to float\n    const vec4 toFloat = vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n    float rgba2float(vec4 rgba) {\n      // Convert components from 0->1 back to 0->255 and then\n      // add the components together with their corresponding\n      // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n      return dot(rgba, toFloat);\n    }\n  ]]></snippet>\n\n  <snippet name="textVS">\n    <![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_vertexOffset;\n      attribute vec4 a_tex;\n      attribute vec4 a_levelInfo;\n\n      uniform lowp vec4 u_color; // always defined as halo does not support data driven but text does\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      varying lowp vec4 v_color;\n\n      uniform mediump float u_size;\n    #ifdef DD\n      attribute mediump float a_size;\n    #endif // DD\n      varying mediump float v_size;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n\n      // attribute bool a_visible; // --\x3e a one bit controlling the visibility of the vertex\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the size of the mosaic given in pixels\n      uniform vec2 u_mosaicSize;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the map\'s rotation from the north\n      uniform mediump float u_mapRotation;\n      uniform mediump float u_level;\n\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\n      uniform lowp float u_keepUpright;\n\n      // the rate of the change in the opacity (fade) of the icons\n      uniform mediump float u_fadeSpeed;\n\n      // the low level we transition (to/from)\n      uniform mediump float u_minfadeLevel;\n\n      // the high level we transition (to/from)\n      uniform mediump float u_maxfadeLevel;\n\n      // the amount of fade given teh current time past the last recorded level\n      uniform mediump float u_fadeChange;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_opacity;\n\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\n      varying lowp vec2 v_tex;\n\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\n      // by 8 and then at the shader divide by the same number\n      const float offsetPrecision = 1.0 / 8.0;\n\n      // outline position and appearance\n      const mediump float edgePos = 0.75; // defined by the SDF encoding\n      uniform mediump float u_edgeDistance;\n      uniform mediump float u_edgeBlur;\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\n\n      varying mediump float v_edgeDistance; // will factor in the size\n      varying mediump float v_edgeWidth; // will factor in the size\n\n      uniform lowp float u_halo; // needed to avoid using the color attribute for halo\n\n      void main()\n      {\n        mediump float a_labelMinLevel = a_levelInfo[0];\n        mediump float a_angle        = a_levelInfo[1];\n        mediump float a_minLevel    = a_levelInfo[2];\n        mediump float a_maxLevel    = a_levelInfo[3];\n\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\n        mediump float delta_z = 0.0;\n\n        // TODO: force clipping the vertex in case that the vertex isn\'t visible\n        //delta_z += a_visible ? 0.0 : 1.0;\n\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\n        mediump float rotated = mod(a_angle + u_mapRotation, 256.0);\n        delta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z += (flip > 0) && (64 <= rotated) && (rotated < 192)\n\n        // u_level is the current service level adjusted for the change in font size\n        delta_z += 1.0 - step(a_minLevel, u_level); // Test if (level < minLevel)\n        delta_z += step(a_maxLevel, u_level); // Test if (maxLevel <= level)\n\n        // calculate the alpha given the change in the fade and the fade-speed\n        lowp float alpha = clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\n\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\n        v_transparency = (u_fadeSpeed >= 0.0 ? alpha : 1.0 - alpha);\n\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\n        if (u_maxfadeLevel < a_labelMinLevel)\n        {\n          v_transparency = 0.0;\n        }\n        if (u_minfadeLevel >= a_labelMinLevel)\n        {\n          v_transparency = 1.0;\n        }\n\n        // if label has been faded out, clip it\n        delta_z += step(v_transparency, 0.0);\n\n        v_tex = a_tex.xy / u_mosaicSize;\n\n      #ifdef DD\n        if (u_halo > 0.5)\n        {\n          v_color = u_color;\n        }\n        else\n        {\n          v_color = a_color * u_color;\n          // opacity already factored in a_color\n        }\n      #else\n        v_color = u_color;\n      #endif // DD\n\n      #ifdef DD\n        v_size = a_size * u_size;\n      #else\n        v_size = u_size;\n      #endif // DD\n\n      #ifdef ID\n        v_id = u_id / 255.0;\n      #endif // ID\n\n        v_edgeDistance = edgePos - u_edgeDistance / v_size;\n        v_edgeWidth = (u_antialiasingWidth + u_edgeBlur) / v_size;\n\n        gl_Position = vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * v_size * vec4(offsetPrecision * a_vertexOffset, delta_z, 0.0);\n      }\n    ]]>\n  </snippet>\n\n  <snippet name="textFS">\n    <![CDATA[\n      uniform lowp sampler2D u_texture;\n      uniform mediump float u_edgeDistance;\n\n      varying lowp vec2 v_tex;\n      varying lowp float v_transparency;\n      varying lowp vec4 v_color;\n      varying mediump float v_edgeWidth;\n      varying mediump float v_edgeDistance;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // this is taken from http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\n      // and https://www.mapbox.com/blog/text-signed-distance-fields/\n      // http://metalbyexample.com/rendering-text-in-metal-with-signed-distance-fields/\n\n      void main()\n      {\n        // read the distance from the SDF texture\n        lowp float dist = texture2D(u_texture, v_tex).a;\n\n        // use a smooth-step in order to calculate the geometry of the shape given by the distance field\n        mediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist) * v_transparency;\n\n        gl_FragColor = alpha * v_color;\n\n      #ifdef ID\n        if (gl_FragColor.a < 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor = v_id;\n      #endif // ID\n      }\n    ]]>\n  </snippet>\n\n</snippets>\n\n'},2130:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1447),i(1503),i(1488),i(203),i(1540),i(1528),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u){return function(){function e(){this._attributeLocations={a_pos:0,a_color:1,a_stroke_color:2,a_data:3},this._initialized=!1,this._viewProjMat=i.create(),this._offsetVector=r.create(),this._color=n.create(),this._strokeColor=n.create()}return e.prototype.dispose=function(){},e.prototype.render=function(e,t,r,n,s,l,u,h,f){if(0!==t.triangleElementCount){this._initialized||this._initialize(e);var d=u.hasDataDrivenRadius?1:u.getPaintValue("circle-radius",r),c=u.hasDataDrivenColor?[1,1,1,1]:u.getPaintValue("circle-color",r),p=u.hasDataDrivenOpacity?1:u.getPaintValue("circle-opacity",r),_=u.hasDataDrivenStrokeWidth?1:u.getPaintValue("circle-stroke-width",r),m=u.hasDataDrivenStrokeColor?[1,1,1,1]:u.getPaintValue("circle-stroke-color",r),v=u.hasDataDrivenStrokeOpacity?1:u.getPaintValue("circle-stroke-opacity",r),x=u.hasDataDrivenBlur?0:u.getPaintValue("circle-blur",r),g=p*c[3]*f;this._color[0]=g*c[0],this._color[1]=g*c[1],this._color[2]=g*c[2],this._color[3]=g,g=v*m[3]*f,this._strokeColor[0]=g*m[0],this._strokeColor[1]=g*m[1],this._strokeColor[2]=g*m[2],this._strokeColor[3]=g;var D=l.tileTransform.transform,y=u.getPaintValue("circle-translate",r);if(0!==y[0]||0!==y[1]){i.copy(this._viewProjMat,l.tileTransform.transform);var b=y[0],M=y[1],I=0,S=0,w=l.coordRange/512,F=(1<<l.key.level)/Math.pow(2,r)*w;if(1===u.getPaintValue("circle-translate-anchor",r)){var V=-a.C_DEG_TO_RAD*s,z=Math.sin(V),A=Math.cos(V);I=F*(b*A-M*z),S=F*(b*z+M*A)}else I=F*b,S=F*M;this._offsetVector[0]=I,this._offsetVector[1]=S,this._offsetVector[2]=0,i.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),D=this._viewProjMat}var T=this._getCircleVAO(e,l);if(T){e.bindVAO(T);var P=3===n,O=this._shaderVariations.getProgram([P],void 0,void 0,this._attributeLocations);if(e.bindProgram(O),O.setUniformMatrix4fv("u_transformMatrix",D),O.setUniformMatrix4fv("u_extrudeMatrix",h),O.setUniform2fv("u_normalized_origin",l.tileTransform.displayCoord),O.setUniform1f("u_depth",u.z),O.setUniform1f("u_radius",d),O.setUniform4fv("u_color",this._color),O.setUniform1f("u_blur",x),O.setUniform1f("u_stroke_width",_),O.setUniform4fv("u_stroke_color",this._strokeColor),O.setUniform1f("u_antialiasingWidth",1.2),P){var R=o.int32To4Bytes(t.layerID);O.setUniform4f("u_id",R[0],R[1],R[2],R[3])}e.drawElements(4,t.triangleElementCount,5125,12*t.triangleElementStart),e.bindVAO()}}},e.prototype._initialize=function(e){if(this._initialized)return!0;var t=new l("circle",["circleVS","circleFS"],[],s,e);return t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t,this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:16,normalized:!0,divisor:0},{name:"a_stroke_color",count:4,type:5121,offset:8,stride:16,normalized:!0,divisor:0},{name:"a_data",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]},this._initialized=!0,!0},e.prototype._getCircleVAO=function(e,t){if(t.circleVertexArrayObject)return t.circleVertexArrayObject;var i=t.circleVertexBuffer,r=t.circleIndexBuffer;return i&&r?(t.circleVertexArrayObject=new u(e,this._attributeLocations,this._vertexAttributes,{geometry:i},r),t.circleVertexArrayObject):null},e}()}.apply(null,r))||(e.exports=n)},2131:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1779),i(1447),i(1503),i(1488),i(203),i(1540),i(1528),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h){return function(){function e(){this._fillAttributeLocations={a_pos:0},this._fillAttributeLocationsDD={a_pos:0,a_color:1},this._outlineAttributeLocations={a_pos:0,a_offset:1,a_xnormal:2},this._outlineAttributeLocationsDD={a_pos:0,a_offset:1,a_xnormal:2,a_color:3},this._initialized=!1,this._viewProjMat=r.create(),this._offsetVector=n.create(),this._patternMatrix=i.create(),this._color=a.create(),this._outlineColor=a.create()}return e.prototype.dispose=function(){},e.prototype.render=function(e,t,i,n,a,l,u,h,f,d,c){if(0!==t.triangleElementCount){this._initialized||this._initialize(e);var p=void 0!==u.getPaintValue("fill-pattern",i),_=u.hasDataDrivenColor?[1,1,1,1]:u.getPaintValue("fill-color",i),m=u.hasDataDrivenOpacity?1:u.getPaintValue("fill-opacity",i),v=m*_[3]*c;this._color[0]=v*_[0],this._color[1]=v*_[1],this._color[2]=v*_[2],this._color[3]=v;var x,g=3===a;g&&(x=s.int32To4Bytes(t.layerID));var D=l.tileTransform.transform,y=l.coordRange/512,b=u.getPaintValue("fill-translate",i);if(0!==b[0]||0!==b[1]){r.copy(this._viewProjMat,l.tileTransform.transform);var M=b[0],I=b[1],S=0,w=0,F=(1<<l.key.level)/Math.pow(2,i)*y;if(1===u.getPaintValue("fill-translate-anchor",i)){var V=-o.C_DEG_TO_RAD*n,z=Math.sin(V),A=Math.cos(V);S=F*(M*A-I*z),w=F*(M*z+I*A)}else S=F*M,w=F*I;this._offsetVector[0]=S,this._offsetVector[1]=w,this._offsetVector[2]=0,r.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),D=this._viewProjMat}if(this._drawFill(e,t,i,a,l,u,h,D,d,c,g,x),u.getPaintValue("fill-antialias",i)&&!p&&t.outlineElementCount>0&&(1===a||3===a)){var T=u.hasDataDrivenOutline;if(u.outlineUsesFillColor){if(1!==this._color[3])return;this._outlineColor[0]=this._color[0],this._outlineColor[1]=this._color[1],this._outlineColor[2]=this._color[2],this._outlineColor[3]=this._color[3]}else{var P=u.hasDataDrivenOutlineColor?[1,1,1,1]:u.getPaintValue("fill-outline-color",i),O=m*P[3]*c;this._outlineColor[0]=O*P[0],this._outlineColor[1]=O*P[1],this._outlineColor[2]=O*P[2],this._outlineColor[3]=O}var R=.75/d,k=this._getOutlineVAO(e,l,T);if(k){e.bindVAO(k);var B=this._outlineShaderVariations.getProgram([T,g],void 0,void 0,T?this._outlineAttributeLocationsDD:this._outlineAttributeLocations);e.bindProgram(B),B.setUniformMatrix4fv("u_transformMatrix",D),B.setUniformMatrix4fv("u_extrudeMatrix",f),B.setUniform2fv("u_normalized_origin",l.tileTransform.displayCoord),B.setUniform1f("u_depth",u.z+1/65536),B.setUniform1f("u_outline_width",R),B.setUniform4fv("u_color",this._outlineColor),g&&B.setUniform4f("u_id",x[0],x[1],x[2],x[3]),e.drawElements(4,t.outlineElementCount,5125,12*t.outlineElementStart),e.bindVAO()}}}},e.prototype._initialize=function(e){if(this._initialized)return!0;var t=new u("fill",["fillVS","fillFS"],[],l,e);t.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN"),t.addDefine("DD","DD",[!0,!1],"DD"),t.addDefine("ID","ID",[!0,!0],"ID"),this._fillShaderVariations=t,this._fillVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},this._fillVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:8,normalized:!0,divisor:0}]};var i=new u("outline",["outlineVS","outlineFS"],[],l,e);return i.addDefine("DD","DD",[!0,!1],"DD"),i.addDefine("ID","ID",[!0,!0],"ID"),this._outlineShaderVariations=i,this._outlineVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:8,normalized:!1,divisor:0}]},this._outlineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:12,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:8,stride:12,normalized:!0,divisor:0}]},this._initialized=!0,!0},e.prototype._drawFill=function(e,t,r,n,a,o,s,l,u,h,f,d){var c=o.getPaintValue("fill-pattern",r),p=void 0!==c,_=o.hasDataDrivenOpacity?1:h*o.getPaintValue("fill-opacity",r),m=o.hasDataDrivenColor?[1,1,1,1]:o.getPaintValue("fill-color",r),v=_*m[3]*h;this._color[0]=v*m[0],this._color[1]=v*m[1],this._color[2]=v*m[2],this._color[3]=v;var x=o.hasDataDrivenFill,g=!1;if(!p&&(!x&&1===v)&&(g=!0),(!p||0!==n)&&(!g||1!==n)&&(p||g||0!==n)){var D=this._getFillVAO(e,a,x);if(D){e.bindVAO(D);var y=this._fillShaderVariations.getProgram([p,x,f],void 0,void 0,x?this._fillAttributeLocationsDD:this._fillAttributeLocations);if(e.bindProgram(y),p){var b=s.getMosaicItemPosition(c,!0);if(b){var M=a.coordRange/512/Math.pow(2,Math.round(r)-a.key.level)/u;i.identity(this._patternMatrix);var I=1/(b.size[0]*M),S=1/(b.size[1]*M);this._patternMatrix[0]=I,this._patternMatrix[4]=S,s.bind(e,9729,b.page,1),y.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix),y.setUniform2f("u_pattern_tl",b.tl[0],b.tl[1]),y.setUniform2f("u_pattern_br",b.br[0],b.br[1]),y.setUniform1i("u_texture",1)}}y.setUniformMatrix4fv("u_transformMatrix",l),y.setUniform2fv("u_normalized_origin",a.tileTransform.displayCoord),y.setUniform1f("u_depth",o.z+1/65536),y.setUniform4fv("u_color",this._color),f&&y.setUniform4f("u_id",d[0],d[1],d[2],d[3]),e.drawElements(4,t.triangleElementCount,5125,12*t.triangleElementStart),e.bindVAO()}}},e.prototype._getFillVAO=function(e,t,i){if(i){if(t.fillDDVertexArrayObject)return t.fillDDVertexArrayObject;var r=t.fillDDVertexBuffer,n=t.fillIndexBuffer;return r&&n?(t.fillDDVertexArrayObject=new h(e,this._fillAttributeLocationsDD,this._fillVertexAttributesDD,{geometry:r},n),t.fillDDVertexArrayObject):null}if(t.fillVertexArrayObject)return t.fillVertexArrayObject;r=t.fillVertexBuffer,n=t.fillIndexBuffer;return r&&n?(t.fillVertexArrayObject=new h(e,this._fillAttributeLocations,this._fillVertexAttributes,{geometry:r},n),t.fillVertexArrayObject):null},e.prototype._getOutlineVAO=function(e,t,i){if(i){if(t.outlineDDVertexArrayObject)return t.outlineDDVertexArrayObject;var r=t.outlineDDVertexBuffer,n=t.outlineIndexBuffer;return r&&n?(t.outlineDDVertexArrayObject=new h(e,this._outlineAttributeLocationsDD,this._outlineVertexAttributesDD,{geometry:r},n),t.outlineDDVertexArrayObject):null}if(t.outlineVertexArrayObject)return t.outlineVertexArrayObject;r=t.outlineVertexBuffer,n=t.outlineIndexBuffer;return r&&n?(t.outlineVertexArrayObject=new h(e,this._outlineAttributeLocations,this._outlineVertexAttributes,{geometry:r},n),t.outlineVertexArrayObject):null},e}()}.apply(null,r))||(e.exports=n)},2132:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1447),i(419),i(1503),i(1488),i(203),i(1540),i(1528),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h){return function(){function e(){this._attributeLocations={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2},this._attributeLocationsDD={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2,a_color:3,a_width:4},this._initialized=!1,this._viewProjMat=i.create(),this._offsetVector=n.create(),this._color=a.create(),this._dashArray=r.create()}return e.prototype.dispose=function(){},e.prototype.render=function(e,t,r,n,a,l,u,h,f,d,c){if(0!==t.triangleElementCount){this._initialized||this._initialize(e);var p=l.tileTransform.transform,_=l.coordRange/512,m=u.getPaintValue("line-translate",r);if(0!==m[0]||0!==m[1]){i.copy(this._viewProjMat,l.tileTransform.transform);var v=m[0],x=m[1],g=0,D=0,y=(1<<l.key.level)/Math.pow(2,r)*_,b=a.rotation;if(1===u.getPaintValue("line-translate-anchor",r)){var M=-o.C_DEG_TO_RAD*b,I=Math.sin(M),S=Math.cos(M);g=y*(v*S-x*I),D=y*(v*I+x*S)}else g=y*v,D=y*x;this._offsetVector[0]=g,this._offsetVector[1]=D,this._offsetVector[2]=0,i.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),p=this._viewProjMat}var w=u.getPaintValue("line-pattern",r),F=void 0!==w,V=1/d,z=u.getPaintValue("line-blur",r),A=u.hasDataDrivenColor?[1,1,1,1]:u.getPaintValue("line-color",r),T=u.hasDataDrivenOpacity?1:u.getPaintValue("line-opacity",r),P=u.hasDataDrivenWidth?1:u.getPaintValue("line-width",r),O=T*A[3]*c;this._color[0]=O*A[0],this._color[1]=O*A[1],this._color[2]=O*A[2],this._color[3]=O;var R,k=u.hasDataDrivenLine,B=3===n;B&&(R=s.int32To4Bytes(t.layerID));var C=this._getLineVAO(e,l,k);if(C){e.bindVAO(C);var E=this._shaderVariations.getProgram([F,k,B],void 0,void 0,k?this._attributeLocationsDD:this._attributeLocations);if(e.bindProgram(E),E.setUniformMatrix4fv("u_transformMatrix",p),E.setUniformMatrix4fv("u_extrudeMatrix",f),E.setUniform2fv("u_normalized_origin",l.tileTransform.displayCoord),E.setUniform1f("u_depth",u.z),E.setUniform1f("u_blur",z),E.setUniform1f("u_antialiasing",V),E.setUniform4fv("u_color",this._color),E.setUniform1f("u_width",P),B&&E.setUniform4f("u_id",R[0],R[1],R[2],R[3]),F){var L=h.getMosaicItemPosition(w,!0);L&&(h.bind(e,9729,L.page,1),E.setUniform2f("u_pattern_tl",L.tl[0],L.br[1]),E.setUniform2f("u_pattern_br",L.br[0],L.tl[1]),E.setUniform2f("u_spriteSize",_*L.size[0],L.size[1]),E.setUniform1i("u_texture",1))}else{var j=u.getPaintValue("line-dasharray",r);j.length<2&&(j=[1,-1]);var U=_;this._dashArray[0]=U*j[0],this._dashArray[1]=U*j[1],E.setUniform2fv("u_dasharray",this._dashArray)}e.drawElements(4,t.triangleElementCount,5125,12*t.triangleElementStart),e.bindVAO()}}},e.prototype._initialize=function(e){if(this._initialized)return!0;var t=new u("line",["lineVS","lineFS"],[],l,e);return t.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN"),t.addDefine("DD","DD",[!0,!1],"DD"),t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t,this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,offset:8,stride:12,normalized:!1,divisor:0}]},this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:20,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:20,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5122,offset:8,stride:20,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:12,stride:20,normalized:!0,divisor:0},{name:"a_width",count:1,type:5126,offset:16,stride:20,normalized:!1,divisor:0}]},this._initialized=!0,!0},e.prototype._getLineVAO=function(e,t,i){if(i){if(t.lineDDVertexArrayObject)return t.lineDDVertexArrayObject;var r=t.lineDDVertexBuffer,n=t.lineIndexBuffer;return r&&n?(t.lineDDVertexArrayObject=new h(e,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:r},n),t.lineDDVertexArrayObject):null}if(t.lineVertexArrayObject)return t.lineVertexArrayObject;r=t.lineVertexBuffer,n=t.lineIndexBuffer;return r&&n?(t.lineVertexArrayObject=new h(e,this._attributeLocations,this._vertexAttributes,{geometry:r},n),t.lineVertexArrayObject):null},e}()}.apply(null,r))||(e.exports=n)},2133:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(2134),i(2135)],void 0===(n=function(e,t,i,r){return function(){function e(){this._iconRenderer=new i,this._sdfRenderer=new r}return e.prototype.dispose=function(){this._iconRenderer&&(this._iconRenderer.dispose(),this._iconRenderer=null),this._sdfRenderer&&(this._sdfRenderer.dispose(),this._sdfRenderer=null)},e.prototype.render=function(e,t,i,r,n,a,o,s,l,u,h,f,d,c){t.hasData()&&(t.markerPerPageElementsMap.size>0&&this._iconRenderer.render(e,t,i,r,n,a,o,s,l,h,f,c),t.glyphPerPageElementsMap.size>0&&this._sdfRenderer.render(e,t,i,r,n,a,o,s,u,h,f,d,c))},e}()}.apply(null,r))||(e.exports=n)},2134:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(1447),i(1503),i(1488),i(203),i(1540),i(1528),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u){return function(){function e(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3},this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5},this._spritesTextureSize=new Float32Array(2),this._initialized=!1,this._viewProjMat=i.create(),this._offsetVector=r.create(),this._extrudeMat=i.create(),this._color=n.create()}return e.prototype.dispose=function(){},e.prototype.render=function(e,t,r,n,s,l,u,h,f,d,c,p){var _=this;this._initialized||this._initialize(e);var m=h.hasDataDrivenIconSize?1:h.getLayoutValue("icon-size",r),v=h.hasDataDrivenIconColor?[1,1,1,1]:h.getPaintValue("icon-color",r),x=h.hasDataDrivenIconOpacity?1:h.getPaintValue("icon-opacity",r),g=v[3]*x*p;this._color[0]=g*v[0],this._color[1]=g*v[1],this._color[2]=g*v[2],this._color[3]=g;var D=h.getLayoutValue("icon-rotation-alignment",r);2===D&&(D=1===h.getLayoutValue("symbol-placement",r)?0:1);var y=0===D,b=t.isSDF,M=h.hasDataDrivenIcon,I=3===n,S=a.degToByte(s),w=u.tileTransform.transform,F=h.getPaintValue("icon-translate",r);if(0!==F[0]||0!==F[1]){i.copy(this._viewProjMat,u.tileTransform.transform);var V=F[0],z=F[1],A=0,T=0,P=u.coordRange/512,O=(1<<u.key.level)/Math.pow(2,r)*P;if(1===h.getPaintValue("icon-translate-anchor",r)){var R=-a.C_DEG_TO_RAD*s,k=Math.sin(R),B=Math.cos(R);A=O*(V*B-z*k),T=O*(V*k+z*B)}else A=O*V,T=O*z;this._offsetVector[0]=A,this._offsetVector[1]=T,this._offsetVector[2]=0,i.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),w=this._viewProjMat}y?i.copy(this._extrudeMat,d):i.copy(this._extrudeMat,c);var C=this._getIconVAO(e,u,M);if(C){e.bindVAO(C);var E=this._shaderVariations.getProgram([b,M,I],void 0,void 0,M?this._attributeLocationsDD:this._attributeLocations);if(e.bindProgram(E),b){var L=h.getPaintValue("icon-halo-color",r),j=h.getPaintValue("icon-halo-width",r);E.setUniform4f("u_outlineColor",L[0],L[1],L[2],L[3]),E.setUniform1f("u_outlineSize",j)}if(E.setUniformMatrix4fv("u_transformMatrix",w),E.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat),E.setUniform2fv("u_normalized_origin",u.tileTransform.displayCoord),E.setUniform1f("u_depth",h.z),E.setUniform1f("u_mapRotation",S),E.setUniform1f("u_keepUpright",0),E.setUniform1f("u_level",10*r),E.setUniform1f("u_fadeSpeed",10*l.fadeSpeed),E.setUniform1f("u_minfadeLevel",10*l.minfadeLevel),E.setUniform1f("u_maxfadeLevel",10*l.maxfadeLevel),E.setUniform1f("u_fadeChange",10*(r+l.fadeChange)),E.setUniform1i("u_texture",1),E.setUniform1f("u_size",m),E.setUniform4fv("u_color",this._color),I){var U=o.int32To4Bytes(t.layerID);E.setUniform4f("u_id",U[0],U[1],U[2],U[3])}t.markerPerPageElementsMap.forEach(function(t,i){_._spritesTextureSize[0]=f.getWidth(i)/4,_._spritesTextureSize[1]=f.getHeight(i)/4,E.setUniform2fv("u_mosaicSize",_._spritesTextureSize),f.bind(e,9729,i,1),e.drawElements(4,t[1],5125,12*t[0])}),e.bindVAO()}},e.prototype._initialize=function(e){if(this._initialized)return!0;var t=new l("icon",["iconVS","iconFS"],[],s,e);return t.addDefine("SDF","SDF",[!0,!0],"SDF"),t.addDefine("DD","DD",[!0,!1],"DD"),t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t,this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]},this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]},this._initialized=!0,!0},e.prototype._getIconVAO=function(e,t,i){if(i){if(t.iconDDVertexArrayObject)return t.iconDDVertexArrayObject;var r=t.iconDDVertexBuffer,n=t.iconIndexBuffer;return r&&n?(t.iconDDVertexArrayObject=new u(e,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:r},n),t.iconDDVertexArrayObject):null}if(t.iconVertexArrayObject)return t.iconVertexArrayObject;r=t.iconVertexBuffer,n=t.iconIndexBuffer;return r&&n?(t.iconVertexArrayObject=new u(e,this._attributeLocations,this._vertexAttributes,{geometry:r},n),t.iconVertexArrayObject):null},e}()}.apply(null,r))||(e.exports=n)},2135:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(9),i(1447),i(1503),i(1488),i(203),i(1540),i(1528),i(1464),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s,l,u,h){return function(){function e(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3},this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5},this._initialized=!1,this._viewProjMat=r.create(),this._offsetVector=n.create(),this._extrudeMat=r.create(),this._haloColor=a.create(),this._sdfColor=a.create(),this._scaleVec=n.create()}return e.prototype.dispose=function(){},e.prototype.render=function(e,t,n,a,l,u,h,f,d,c,p,_,m){var v=this;if(!i("esri-vector-tiles-avoid-text")){this._initialized||this._initialize(e);var x=o.degToByte(l),g=f.getLayoutValue("text-rotation-alignment",n);2===g&&(g=1===f.getLayoutValue("symbol-placement",n)?0:1);var D=0===g,y=f.getLayoutValue("text-keep-upright",n)&&D,b=3===a,M=.8*3/_,I=f.hasDataDrivenTextSize?1:f.getLayoutValue("text-size",n),S=f.hasDataDrivenTextColor?[1,1,1,1]:f.getPaintValue("text-color",n),w=f.hasDataDrivenTextOpacity?1:f.getPaintValue("text-opacity",n),F=S[3]*w*m;this._sdfColor[0]=F*S[0],this._sdfColor[1]=F*S[1],this._sdfColor[2]=F*S[2],this._sdfColor[3]=F,this._glyphTextureSize||(this._glyphTextureSize=new Float32Array([d.width/4,d.height/4]));var V=h.tileTransform.transform,z=f.getPaintValue("text-translate",n);if(0!==z[0]||0!==z[1]){r.copy(this._viewProjMat,h.tileTransform.transform);var A=z[0],T=z[1],P=0,O=0,R=h.coordRange/512,k=(1<<h.key.level)/Math.pow(2,n)*R;if(1===f.getPaintValue("text-translate-anchor",n)){var B=-o.C_DEG_TO_RAD*l,C=Math.sin(B),E=Math.cos(B);P=k*(A*E-T*C),O=k*(A*C+T*E)}else P=k*A,O=k*T;this._offsetVector[0]=P,this._offsetVector[1]=O,this._offsetVector[2]=0,r.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),V=this._viewProjMat}D?r.copy(this._extrudeMat,c):r.copy(this._extrudeMat,p),this._scaleVec[0]=1/24,this._scaleVec[1]=1/24,this._scaleVec[2]=1,r.scale(this._extrudeMat,this._extrudeMat,this._scaleVec);var L=f.hasDataDrivenText,j=this._getSDFVAO(e,h,L);if(j){e.bindVAO(j);var U=this._shaderVariations.getProgram([L,b],void 0,void 0,L?this._attributeLocationsDD:this._attributeLocations);if(e.bindProgram(U),U.setUniformMatrix4fv("u_transformMatrix",V),U.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat),U.setUniform2fv("u_normalized_origin",h.tileTransform.displayCoord),U.setUniform1f("u_depth",f.z+1/65536),U.setUniform2fv("u_mosaicSize",this._glyphTextureSize),U.setUniform1f("u_mapRotation",x),U.setUniform1f("u_keepUpright",y?1:0),U.setUniform1f("u_level",10*n),U.setUniform1f("u_fadeSpeed",10*u.fadeSpeed),U.setUniform1f("u_minfadeLevel",10*u.minfadeLevel),U.setUniform1f("u_maxfadeLevel",10*u.maxfadeLevel),U.setUniform1f("u_fadeChange",10*(n+u.fadeChange)),U.setUniform1i("u_texture",0),U.setUniform1f("u_size",I),U.setUniform1f("u_antialiasingWidth",M),b){var N=s.int32To4Bytes(t.layerID);U.setUniform4f("u_id",N[0],N[1],N[2],N[3])}t.glyphPerPageElementsMap.forEach(function(t,i){d.bind(e,9729,i,0);var r=f.getPaintValue("text-halo-color",n),a=f.getPaintValue("text-halo-width",n);if(r[3]>0&&a>0){var o=r[3]*w*m;v._haloColor[0]=o*r[0],v._haloColor[1]=o*r[1],v._haloColor[2]=o*r[2],v._haloColor[3]=o;var s=3*f.getPaintValue("text-halo-blur",n),l=3*a;U.setUniform4fv("u_color",v._haloColor),U.setUniform1f("u_halo",1),U.setUniform1f("u_edgeDistance",l),U.setUniform1f("u_edgeBlur",s),e.drawElements(4,t[1],5125,12*t[0])}v._sdfColor[3]>0&&(U.setUniform4fv("u_color",v._sdfColor),U.setUniform1f("u_halo",0),U.setUniform1f("u_edgeDistance",0),U.setUniform1f("u_edgeBlur",0),e.drawElements(4,t[1],5125,12*t[0]))}),e.bindVAO()}}},e.prototype._initialize=function(e){if(this._initialized)return!0;var t=new u("text",["textVS","textFS"],[],l,e);return t.addDefine("DD","DD",[!0,!1],"DD"),t.addDefine("ID","ID",[!0,!0],"ID"),this._shaderVariations=t,this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]},this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]},this._initialized=!0,!0},e.prototype._getSDFVAO=function(e,t,i){if(i){if(t.textDDVertexArrayObject)return t.textDDVertexArrayObject;var r=t.textDDVertexBuffer,n=t.textIndexBuffer;return r&&n?(t.textDDVertexArrayObject=new h(e,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:r},n),t.textDDVertexArrayObject):null}if(t.textVertexArrayObject)return t.textVertexArrayObject;r=t.textVertexBuffer,n=t.textIndexBuffer;return r&&n?(t.textVertexArrayObject=new h(e,this._attributeLocations,this._vertexAttributes,{geometry:r},n),t.textVertexArrayObject):null},e}()}.apply(null,r))||(e.exports=n)},2136:function(e,t,i){var r,n;r=[i.dj.c(e.i),t,i(203),i(1528),i(1287),i(1283),i(1280),i(1286)],void 0===(n=function(e,t,i,r,n,a,o,s){return function(){function e(){this._initialized=!1,this._maxWidth=0,this._color=new Float32Array([1,0,0,1])}return e.prototype.dispose=function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null)},e.prototype.render=function(e,t){this._initialized||this._initialize(e),e.bindVAO(this._outlineVertexArrayObject),e.bindProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix4fv("u_transformMatrix",t.tileTransform.transform),this._outlineProgram.setUniform2fv("u_normalized_origin",t.tileTransform.displayCoord),this._outlineProgram.setUniform1f("u_coord_range",t.coordRange),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),e.setLineWidth(2),e.drawArrays(3,0,4),e.bindVAO();var i=this._getTexture(e,t);i&&(e.bindVAO(this._tileInfoVertexArrayObject),e.bindProgram(this._tileInfoProgram),e.bindTexture(i,0),this._tileInfoProgram.setUniformMatrix4fv("u_transformMatrix",t.tileTransform.transform),this._tileInfoProgram.setUniform2fv("u_normalized_origin",t.tileTransform.displayCoord),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform1f("u_coord_ratio",t.coordRange/512),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",i.descriptor.width,i.descriptor.height),e.drawArrays(5,0,4),e.bindVAO())},e.prototype._initialize=function(e){if(this._initialized)return!0;var t={a_pos:0},i=new a(e,r.backgroundVS,r.backgroundFS,t),o=new a(e,r.tileInfoVS,r.tileInfoFS,t),l={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},u=new Int8Array([0,0,1,0,1,1,0,1]),h=n.createVertex(e,35044,u),f=new s(e,t,l,{geometry:h}),d=new Int8Array([0,0,1,0,0,1,1,1]),c=n.createVertex(e,35044,d),p=new s(e,t,l,{geometry:c});return this._outlineProgram=i,this._tileInfoProgram=o,this._outlineVertexArrayObject=f,this._tileInfoVertexArrayObject=p,this._initialized=!0,!0},e.prototype._getTexture=function(e,t){if(t.texture)return t.texture;this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","256"),this._canvas.setAttribute("height","32"),this._canvas.setAttribute("style","display:none"));var r=t.key.id,n=this._canvas.getContext("2d");n.font="24px sans-serif",n.textAlign="left",n.textBaseline="middle";var a=n.measureText(r),s=Math.pow(2,Math.ceil(i.log2(a.width+2)));return s>this._maxWidth&&(this._maxWidth=s),n.clearRect(0,0,this._maxWidth,32),n.fillStyle=t.key.level>t.refKey.level?"red":"blue",n.fillText(r,0,16),t.texture=new o(e,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728},this._canvas),t.texture},e}()}.apply(null,r))||(e.exports=n)}}]);