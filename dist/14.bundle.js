(function(){(this||window).webpackJsonp.registerAbsMids({"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/layers/SceneLayer":458,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/layers/mixins/SceneService":1497,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/blank-esri-webpack-app/node_modules/arcgis-js-api/layers/support/RangeInfo":1649})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1497:function(e,r,t){var n,o;n=[t.dj.c(e.i),r,t(2),t(0),t(27),t(8),t(7),t(115),t(6),t(19),t(1),t(18),t(161),t(20),t(75),t(211),t(110),t(109),t(94)],void 0===(o=function(e,r,n,o,i,a,s,p,l,u,d,y,c,f,h,v,m,g,b){var I=s.getLogger("esri.layers.mixins.SceneService");return function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.blendMode=null,r.spatialReference=null,r.fullExtent=null,r.heightModelInfo=null,r.version={major:Number.NaN,minor:Number.NaN,versionString:""},r.copyright=null,r.sublayerTitleMode="item-title",r.title=null,r.layerId=null,r}return n(r,e),r.prototype.readSpatialReference=function(e,r){return this._readSpatialReference(r)},r.prototype._readSpatialReference=function(e){if(null!=e.spatialReference)return f.fromJSON(e.spatialReference);var r=e.store,t=r.indexCRS||r.geographicCRS,n=t&&parseInt(t.substring(t.lastIndexOf("/")+1,t.length),10);return null!=n?new f(n):null},r.prototype.readFullExtent=function(e,r){var t=r.store,n=this._readSpatialReference(r);return null==n||null==t||null==t.extent?null:new y({xmin:t.extent[0],ymin:t.extent[1],xmax:t.extent[2],ymax:t.extent[3],spatialReference:n})},r.prototype.readVersion=function(e,r){var t=r.store,n=null!=t.version?t.version.toString():"",o={major:Number.NaN,minor:Number.NaN,versionString:n},i=n.split(".");return i.length>=2&&(o.major=parseInt(i[0],10),o.minor=parseInt(i[1],10)),o},r.prototype.readTitlePortalItem=function(e,r){return"item-title"!==this.sublayerTitleMode?void 0:e},r.prototype.readTitleService=function(e,r){var t=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return b.titleFromUrlAndName(this.url,r.name);var n=r.name||b.parse(this.url).title;return"item-title-and-service-name"===this.sublayerTitleMode&&t&&(n=t+" - "+n),b.cleanTitle(n)},r.prototype.readLayerId=function(e,r){return r.id},Object.defineProperty(r.prototype,"url",{set:function(e){var r=b.sanitizeUrlWithLayerId(this,e,I);this._set("url",r.url),null!=r.layerId&&this._set("layerId",r.layerId)},enumerable:!0,configurable:!0}),r.prototype.writeUrl=function(e,r){b.writeUrlWithLayerId(this,e,"layers",r)},Object.defineProperty(r.prototype,"parsedUrl",{get:function(){var e=this._get("url");if(!e)return null;var r=u.urlToObject(e);return null!=this.layerId&&b.match.test(r.path)&&(r.path=r.path+"/layers/"+this.layerId),r},enumerable:!0,configurable:!0}),r.prototype.readRootNode=function(e,r){return r.store.rootNode},r.prototype._verifyRootNodeAndUpdateExtent=function(){var e=this;return this._fetchRootNode().then(function(r){return e._updateExtentFromRootNode(r)})},r.prototype._updateExtentFromRootNode=function(e){if(null!=this.fullExtent&&!this.fullExtent.hasZ&&null!=e&&Array.isArray(e.mbs)&&4===e.mbs.length){var r=e.mbs[2],t=e.mbs[3];this.fullExtent.zmin=r-t,this.fullExtent.zmax=r+t}},r.prototype._fetchRootNode=function(){if(!this.rootNode)return l.resolve();var e=u.join(this.parsedUrl.path,this.rootNode);return i(e,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data}).catch(function(r){throw new a("sceneservice:root-node-missing","Root node missing.",{error:r,url:e})})},r.prototype._fetchService=function(){var e=this;return(null==this.layerId&&/SceneServer\/*$/i.test(this.url)?this._fetchFirstLayerId().then(function(r){null!=r&&(e.layerId=r)}):l.resolve()).then(function(){return e._fetchServiceLayer()})},r.prototype._fetchFirstLayerId=function(){return i(this.url,{query:{f:"json"},callbackParamName:"callback",responseType:"json"}).then(function(e){if(e.data&&Array.isArray(e.data.layers)&&e.data.layers.length>0)return e.data.layers[0].id})},r.prototype._fetchServiceLayer=function(){var e=this;return i(this.parsedUrl.path,{query:{f:"json"},responseType:"json"}).then(function(r){r.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));var t=r.data;e.read(t,{origin:"service",url:e.parsedUrl}),e._validateLayer(t)})},r.prototype._validateLayer=function(e){},r.prototype.createGraphicsController=function(e){var r=this;e.layer=this;var n=l.create(function(e){return Promise.all([t.e(1),t.e(2),t.e(3),t.e(5),t.e(53)]).then(function(){var r=[t(1711)];e.apply(null,r)}.bind(this)).catch(t.oe)}).then(function(r){return new r(e)});return n.then(function(e){r.emit("graphics-controller-create",{graphicsController:e})}),n},o([d.shared({id:{json:{origins:{service:{read:!1},"portal-item":{read:!1}}}}})],r.prototype,"properties",void 0),o([d.property({type:f})],r.prototype,"spatialReference",void 0),o([d.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],r.prototype,"readSpatialReference",null),o([d.property({type:y})],r.prototype,"fullExtent",void 0),o([d.reader("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],r.prototype,"readFullExtent",null),o([d.property({readOnly:!0,type:c})],r.prototype,"heightModelInfo",void 0),o([d.property({readOnly:!0})],r.prototype,"version",void 0),o([d.reader("version",["store.version"])],r.prototype,"readVersion",null),o([d.property({type:String,json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),o([d.property({type:String})],r.prototype,"sublayerTitleMode",void 0),o([d.property({type:String})],r.prototype,"title",void 0),o([d.reader("portal-item","title")],r.prototype,"readTitlePortalItem",null),o([d.reader("service","title",["name"])],r.prototype,"readTitleService",null),o([d.property({type:Number})],r.prototype,"layerId",void 0),o([d.reader("service","layerId",["id"])],r.prototype,"readLayerId",null),o([d.property()],r.prototype,"url",null),o([d.writer("url")],r.prototype,"writeUrl",null),o([d.property({dependsOn:["layerId"]})],r.prototype,"parsedUrl",null),o([d.property()],r.prototype,"store",void 0),o([d.property({type:String})],r.prototype,"rootNode",void 0),o([d.reader("rootNode",["store.rootNode"])],r.prototype,"readRootNode",null),o([d.subclass("esri.layers.mixins.SceneService")],r)}(d.declared(h,v,p,m,g))}.apply(null,n))||(e.exports=o)},1649:function(e,r,t){var n,o;n=[t.dj.c(e.i),r,t(2),t(0),t(12),t(1)],void 0===(o=function(e,r,t,n,o,i){Object.defineProperty(r,"__esModule",{value:!0});var a=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.name=null,r.field=null,r.currentRangeExtent=null,r.fullRangeExtent=null,r.type="rangeInfo",r}return t(r,e),n([i.property({type:String,json:{read:!0,write:!0}})],r.prototype,"name",void 0),n([i.property({type:String,json:{read:!0,write:!0}})],r.prototype,"field",void 0),n([i.property({type:[Number],json:{read:!0,write:!0}})],r.prototype,"currentRangeExtent",void 0),n([i.property({type:[Number],json:{read:!0,write:!0}})],r.prototype,"fullRangeExtent",void 0),n([i.property({type:String,readOnly:!0,json:{read:!1,write:!0}})],r.prototype,"type",void 0),n([i.subclass("esri.layers.support.RangeInfo")],r)}(i.declared(o));r.RangeInfo=a,r.default=a}.apply(null,n))||(e.exports=o)},458:function(e,r,t){var n,o;n=[t.dj.c(e.i),r,t(11),t(2),t(0),t(78),t(425),t(27),t(8),t(7),t(6),t(19),t(1),t(84),t(43),t(428),t(75),t(1497),t(423),t(423),t(1519),t(1546),t(422),t(426),t(1476),t(1550),t(1649),t(98),t(1453),t(1483),t(1534),t(427),t(148)],void 0===(o=function(e,r,n,o,i,a,s,p,l,u,d,y,c,f,h,v,m,g,b,I,w,S,F,L,j,R,_,x,N,E,C,O,T){function U(e,r,t){return e&&((e=N.read(e,r,t)||void 0)||P.error("Failed to create renderer",{rendererDefinition:e,layer:this,context:t})),e}var D=["3DObject","Point"],P=u.getLogger("esri.layers.SceneLayer"),A=function(e){function r(r,t){var n=e.call(this)||this;return n.featureReduction=null,n.rangeInfos=null,n.operationalLayerType="ArcGISSceneServiceLayer",n.type="scene",n.fields=[],n.definitionExpression=null,n.elevationInfo=null,n.labelsVisible=!0,n.labelingInfo=null,n.legendEnabled=!0,n.cachedDrawingInfo={color:!1},n.popupEnabled=!0,n.popupTemplate=null,n.objectIdField=null,n.objectIdFilter=null,n._fieldUsageInfo={},n.screenSizePerspectiveEnabled=!0,n}return o(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?n({url:e},r):e},r.prototype.getField=function(e){return L.getField(e,this.fields)},Object.defineProperty(r.prototype,"geometryType",{get:function(){return q[this.profile]||"mesh"},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderer",{set:function(e){L.fixRendererFields(e,this.fields),this._set("renderer",e)},enumerable:!0,configurable:!0}),r.prototype.readCachedDrawingInfo=function(e,r){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e},r.prototype.readObjectIdField=function(e,r){return!e&&r.fields&&r.fields.some(function(r){return"esriFieldTypeOID"===r.type&&(e=r.name),!!e}),e||void 0},r.prototype.readProfile=function(e,r){var t=r.store.profile;return null!=t&&k[t]?k[t]:(P.error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")},r.prototype.readNormalReferenceFrame=function(e,r){return r.store.normalReferenceFrame},r.prototype.load=function(){var e=this,r=this.loadFromPortal({supportedTypes:["Scene Service"]}).always(function(){return e._fetchService()}).then(function(){return a([e._verifyRootNodeAndUpdateExtent(),e._setCompanionFeatureLayer()])}).then(function(){return e._applyCompanionOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return E.loadStyleRenderer(e,{origin:"service"})}).then(function(){return L.fixRendererFields(e.renderer,e.fields)});return this.addResolvingPromise(r),this.when()},r.prototype.createLayerView=function(e){var r=this;return(null==this.profile||"mesh-pyramids"===this.profile?d.create(function(e){return Promise.all([t.e(1),t.e(2),t.e(3),t.e(5),t.e(51)]).then(function(){var r=[t(1513)];e.apply(null,r)}.bind(this)).catch(t.oe)}):d.create(function(e){return Promise.all([t.e(1),t.e(2),t.e(3),t.e(5),t.e(52)]).then(function(){var r=[t(1783)];e.apply(null,r)}.bind(this)).catch(t.oe)})).then(function(t){return new t({view:e,layer:r})})},r.prototype.createQuery=function(){var e=new T;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e},r.prototype.queryExtent=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryExtent(e||r.createQuery())})},r.prototype.queryFeatureCount=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatureCount(e||r.createQuery())})},r.prototype.queryFeatures=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatures(e||r.createQuery())}).then(function(e){if(e&&e.features)for(var t=0,n=e.features;t<n.length;t++){var o=n[t];o.layer=r,o.sourceLayer=r}return e})},r.prototype.queryFeaturesJSON=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeaturesJSON(e||r.createQuery())})},r.prototype.queryObjectIds=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryObjectIds(e||r.createQuery())})},r.prototype.getFieldUsageInfo=function(e){return this._fieldUsageInfo[e]||{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}},r.prototype._getAssociatedLayerForQuery=function(){var e=this;if(!this.loaded)return this.load().then(function(){return e._getAssociatedLayerForQuery()});var r=this.associatedLayer;return null!=r?d.resolve(r):d.reject(new l("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))},r.prototype.hasCachedStatistics=function(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(r){return r.name===e})},r.prototype.queryCachedStatistics=function(e){if(!this.hasCachedStatistics(e))return d.reject(new l("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var r=0,t=this.statisticsInfo;r<t.length;r++){var n=t[r];if(n.name===e){var o=y.join(this.parsedUrl.path,n.href);return p(o,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data})}}},r.prototype.graphicChanged=function(e){this.emit("graphic-update",e)},r.prototype._validateLayer=function(e){if(e.layerType&&-1===D.indexOf(e.layerType))throw new l("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,r){var t=!1,n=!1;if(null==e)t=!0,n=!0;else{var o=r&&r.isGeographic;switch(e){case"east-north-up":case"earth-centered":t=!0,n=o;break;case"vertex-reference-frame":t=!0,n=!o;break;default:t=!1}}if(!t)throw new l("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!n)throw new l("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)},r.prototype._populateFieldUsageInfo=function(){if(this._fieldUsageInfo={},this.fields)for(var e=this,r=0,t=this.fields;r<t.length;r++){!function(r){var t=!(!e.attributeStorageInfo||!e.attributeStorageInfo.some(function(e){return e.name===r.name})),n=!!(e.associatedLayer&&e.associatedLayer.fields&&e.associatedLayer.fields.some(function(e){return e&&r.name===e.name})),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||n,supportsLayerQuery:n};e._fieldUsageInfo[r.name]=o}(t[r])}},r.prototype._applyCompanionOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields)for(var e=0,r=this.associatedLayer.fields;e<r.length;e++){var t=r[e];this.getField(t.name)||this.fields.push(t.clone())}for(var n=["popupTemplate","popupEnabled"],o=h.getProperties(this),i=0;i<n.length;i++){var a=n[i];this._buddyIsMoreImportant(a)&&(o.setDefaultOrigin(this.associatedLayer.originOf(a)),o.set(a,this.associatedLayer[a]),o.setDefaultOrigin("user"))}}},r.prototype._setCompanionFeatureLayer=function(){var e=this;return this._fetchCompanionFeatureLayer().then(function(r){e.associatedLayer=r})},r.prototype._fetchCompanionFeatureLayer=function(){var e=this;return-1===["mesh-pyramids","points"].indexOf(this.profile)?d.resolve(null):(this.portalItem&&this.portalItem.isResolved()?this._fetchCompanionFeatureLayerFromRelatedItems(this.portalItem):this._fetchCompanionFeatureLayerFromUrl()).then(function(e){return e.load()}).catch(function(r){return null==e.attributeStorageInfo?P.warn("Companion FeatureLayer could not be loaded and no binary attributes found. Popups will not work for this SceneLayer: "+e.title):P.info("Companion FeatureLayer could not be loaded. Falling back to binary attributes for Popups on this SceneLayer: "+e.title),null})},r.prototype._fetchCompanionFeatureLayerFromRelatedItems=function(e){var r=this;return e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"}).then(function(e){var t=e.filter(function(e){return"Feature Service"===e.type})[0];return t?r._fetchCompanionFeatureLayerFromPortalItem(new x({id:t.id,portal:t.portal})):d.reject()}).catch(function(){return r._fetchCompanionFeatureLayerFromUrl()})},r.prototype._fetchCompanionFeatureLayerFromPortalItem=function(e){var r=this;return e.load().then(function(e){return r._findMatchingCompanionSublayerUrl(e.url)}).then(function(r){return d.resolve(new v({url:r,portalItem:e}))})},r.prototype._fetchCompanionFeatureLayerFromUrl=function(){return this._findMatchingCompanionSublayerUrl().then(function(e){return d.resolve(new v({url:e}))})},r.prototype._findMatchingCompanionSublayerUrl=function(e){var r=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!r)return d.reject();null==e&&(e=r[1]+"/FeatureServer");var t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),n={query:{f:"json"},responseType:"json"},o=r[1]+"/SceneServer",i=parseInt(r[2],10),s=p(o,n).catch(function(e){return{layers:null}}),l=p(t,n);return a([l,s]).then(function(e){var r=e[0],n=e[1],o=n.data&&n.data.layers,a=r.data&&r.data.layers;if(!Array.isArray(a))throw new Error("expected layers array");if(Array.isArray(o))for(var s=0;s<Math.min(o.length,a.length);s++){if(o[s].id===i)return t+"/"+a[s].id}else if(i<a.length)return t+"/"+a[i].id;throw new Error("could not find matching associated sublayer")})},r.prototype._buddyIsMoreImportant=function(e){if(!this.associatedLayer)return!1;var r=f.nameToId(this.originOf(e)),t=f.nameToId(this.associatedLayer.originOf(e));return null!=t&&t<=f.OriginId.SERVICE?null==r||r<f.OriginId.SERVICE:null!=t&&t<=f.OriginId.PORTAL_ITEM&&(null==r||r<f.OriginId.PORTAL_ITEM)},i([c.shared("esri.layers.SceneLayer")],r.prototype,"declaredClass",void 0),i([c.property({types:{key:"type",base:w.default,typeMap:{selection:S.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],r.prototype,"featureReduction",void 0),i([c.property({type:[_.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},write:{target:"layerDefinition.rangeInfos"}}}}})],r.prototype,"rangeInfos",void 0),i([c.property()],r.prototype,"associatedLayer",void 0),i([c.property()],r.prototype,"operationalLayerType",void 0),i([c.property({json:{read:!1},readOnly:!0})],r.prototype,"type",void 0),i([c.property({type:[F]})],r.prototype,"fields",void 0),i([c.property({readOnly:!0})],r.prototype,"attributeStorageInfo",void 0),i([c.property({readOnly:!0})],r.prototype,"statisticsInfo",void 0),i([c.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],r.prototype,"definitionExpression",void 0),i([c.property({type:O,json:{origins:{service:{read:{source:"elevationInfo"}}},read:{source:"layerDefinition.elevationInfo"},write:{target:"layerDefinition.elevationInfo"}}})],r.prototype,"elevationInfo",void 0),i([c.property({type:String,dependsOn:["profile"]})],r.prototype,"geometryType",null),i([c.property(b.labelsVisible)],r.prototype,"labelsVisible",void 0),i([c.property({type:[j],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:R.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:R.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],r.prototype,"labelingInfo",void 0),i([c.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),i([c.property({types:C.types,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:U}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:U},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],r.prototype,"renderer",null),i([c.property({json:{read:!1}})],r.prototype,"cachedDrawingInfo",void 0),i([c.reader("service","cachedDrawingInfo")],r.prototype,"readCachedDrawingInfo",null),i([c.property(b.popupEnabled)],r.prototype,"popupEnabled",void 0),i([c.property({type:s,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],r.prototype,"popupTemplate",void 0),i([c.property({type:String,json:{read:!1}})],r.prototype,"objectIdField",void 0),i([c.reader("service","objectIdField",["objectIdField","fields"])],r.prototype,"readObjectIdField",null),i([c.property()],r.prototype,"objectIdFilter",void 0),i([c.property({type:String,json:{read:!1}})],r.prototype,"profile",void 0),i([c.reader("service","profile",["store.profile"])],r.prototype,"readProfile",null),i([c.property({readOnly:!0,type:String,json:{read:!1}})],r.prototype,"normalReferenceFrame",void 0),i([c.reader("service","normalReferenceFrame",["store.normalReferenceFrame"])],r.prototype,"readNormalReferenceFrame",null),i([c.property(I.screenSizePerspectiveEnabled)],r.prototype,"screenSizePerspectiveEnabled",void 0),i([c.subclass()],r)}(c.declared(m,g)),k={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},q={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return A}.apply(null,n))||(e.exports=o)}}]);